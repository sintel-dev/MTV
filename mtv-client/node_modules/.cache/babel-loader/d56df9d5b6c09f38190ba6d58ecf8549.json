{"ast":null,"code":"var _jsxFileName = \"/home/sergiu/Projects/mtv-react/src/components/Landing/Pipelines.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Loader from '../Common/Loader';\nimport { getPipelinesData, getSelectedPipeline } from '../../model/selectors/projects';\nimport { selectPipeline } from '../../model/actions/landing';\n\nconst renderPipeline = (pipeline, index, onPipelineSelect) => {\n  const activeClass = 'selectedPipeline.pipelineName === pipeline.name';\n  return React.createElement(\"div\", {\n    className: \"cell \".concat(activeClass),\n    key: index,\n    onClick: () => onPipelineSelect(pipeline.name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, pipeline.name), React.createElement(\"div\", {\n    className: \"item-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"DC: \", pipeline.insert_time.substring(0, 10)), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"By: \", pipeline.created_by || 'null'))));\n};\n\nconst Pipelines = props => {\n  const _props$pipelinesData = props.pipelinesData,\n        pipelineList = _props$pipelinesData.pipelineList,\n        isPipelinesLoading = _props$pipelinesData.isPipelinesLoading;\n  const onSelectPipeline = props.onSelectPipeline;\n  console.log(props);\n  return React.createElement(\"div\", {\n    className: \"item-row scroll-style\",\n    id: \"pipelines\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Pipelines\"), React.createElement(\"div\", {\n    className: \"item-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    isLoading: isPipelinesLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, pipelineList.length ? pipelineList.map((pipeline, index) => renderPipeline(pipeline, index, onSelectPipeline)) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"No pipelines have been found\"))));\n};\n\nPipelines.propTypes = {\n  pipelinesData: PropTypes.object,\n  onSelectPipeline: PropTypes.func\n};\nexport default connect(state => ({\n  pipelinesData: getPipelinesData(state),\n  selectedPipeline: getSelectedPipeline(state)\n}), dispatch => ({\n  onSelectPipeline: pipelineName => dispatch(selectPipeline(pipelineName))\n}))(Pipelines); // export default Pipelines;","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/components/Landing/Pipelines.jsx"],"names":["React","PropTypes","connect","Loader","getPipelinesData","getSelectedPipeline","selectPipeline","renderPipeline","pipeline","index","onPipelineSelect","activeClass","name","insert_time","substring","created_by","Pipelines","props","pipelinesData","pipelineList","isPipelinesLoading","onSelectPipeline","console","log","length","map","propTypes","object","func","state","selectedPipeline","dispatch","pipelineName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SACEC,gBADF,EAEEC,mBAFF,QAGO,gCAHP;AAIA,SAASC,cAAT,QAA+B,6BAA/B;;AAEA,MAAMC,cAAc,GAAG,CAACC,QAAD,EAAWC,KAAX,EAAkBC,gBAAlB,KAAuC;AAC5D,QAAMC,WAAW,GAAG,iDAApB;AAEA,SACE;AAAK,IAAA,SAAS,iBAAUA,WAAV,CAAd;AAAuC,IAAA,GAAG,EAAEF,KAA5C;AAAmD,IAAA,OAAO,EAAE,MAAMC,gBAAgB,CAACF,QAAQ,CAACI,IAAV,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,QAAQ,CAACI,IAAd,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAASJ,QAAQ,CAACK,WAAT,CAAqBC,SAArB,CAA+B,CAA/B,EAAkC,EAAlC,CAAT,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAASN,QAAQ,CAACO,UAAT,IAAuB,MAAhC,CAFF,CADF,CAFF,CADF;AAWD,CAdD;;AAgBA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA,+BACkBA,KAAK,CAACC,aADxB;AAAA,QACnBC,YADmB,wBACnBA,YADmB;AAAA,QACLC,kBADK,wBACLA,kBADK;AAAA,QAEnBC,gBAFmB,GAEEJ,KAFF,CAEnBI,gBAFmB;AAG3BC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,SACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAuC,IAAA,EAAE,EAAC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEG,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEID,YAAY,CAACK,MAAb,GACEL,YAAY,CAACM,GAAb,CAAiB,CAACjB,QAAD,EAAWC,KAAX,KACjBF,cAAc,CAACC,QAAD,EAAWC,KAAX,EAAkBY,gBAAlB,CADd,CADF,GAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCALN,CADF,CAFF,CADF;AAeD,CAnBD;;AAqBAL,SAAS,CAACU,SAAV,GAAsB;AACpBR,EAAAA,aAAa,EAAEjB,SAAS,CAAC0B,MADL;AAEpBN,EAAAA,gBAAgB,EAAEpB,SAAS,CAAC2B;AAFR,CAAtB;AAKA,eAAe1B,OAAO,CAAC2B,KAAK,KAAK;AAC/BX,EAAAA,aAAa,EAAEd,gBAAgB,CAACyB,KAAD,CADA;AAE/BC,EAAAA,gBAAgB,EAAEzB,mBAAmB,CAACwB,KAAD;AAFN,CAAL,CAAN,EAGlBE,QAAQ,KAAK;AACfV,EAAAA,gBAAgB,EAAGW,YAAD,IAAkBD,QAAQ,CAACzB,cAAc,CAAC0B,YAAD,CAAf;AAD7B,CAAL,CAHU,CAAP,CAKXhB,SALW,CAAf,C,CAOA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Loader from '../Common/Loader';\nimport {\n  getPipelinesData,\n  getSelectedPipeline,\n} from '../../model/selectors/projects';\nimport { selectPipeline } from '../../model/actions/landing';\n\nconst renderPipeline = (pipeline, index, onPipelineSelect) => {\n  const activeClass = 'selectedPipeline.pipelineName === pipeline.name';\n\n  return (\n    <div className={`cell ${activeClass}`} key={index} onClick={() => onPipelineSelect(pipeline.name)}>\n      <h3>{pipeline.name}</h3>\n      <div className=\"item-data\">\n        <ul>\n          <li>DC: {pipeline.insert_time.substring(0, 10)}</li>\n          <li>By: {pipeline.created_by || 'null' }</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst Pipelines = (props) => {\n  const { pipelineList, isPipelinesLoading } = props.pipelinesData;\n  const { onSelectPipeline } = props;\n  console.log(props);\n  return (\n    <div className=\"item-row scroll-style\" id=\"pipelines\">\n      <h2>Pipelines</h2>\n      <div className=\"item-wrapper\">\n        <Loader isLoading={isPipelinesLoading}>\n          {\n            pipelineList.length ?\n              pipelineList.map((pipeline, index) =>\n              renderPipeline(pipeline, index, onSelectPipeline)) :\n              <p>No pipelines have been found</p>\n          }\n        </Loader>\n      </div>\n    </div>\n  );\n};\n\nPipelines.propTypes = {\n  pipelinesData: PropTypes.object,\n  onSelectPipeline: PropTypes.func,\n};\n\nexport default connect(state => ({\n  pipelinesData: getPipelinesData(state),\n  selectedPipeline: getSelectedPipeline(state),\n}), dispatch => ({\n  onSelectPipeline: (pipelineName) => dispatch(selectPipeline(pipelineName)),\n}))(Pipelines);\n\n// export default Pipelines;\n"]},"metadata":{},"sourceType":"module"}