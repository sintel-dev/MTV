{"ast":null,"code":"import { api } from './utils'; // http://127.0.0.1:3000/api/v1/experiments/\n// http://127.0.0.1:3000/api/v1/pipelines/\n// http://127.0.0.1:3000/api/v1/datasets/\n\nexport function fetchExperiments() {\n  return function (dispatch) {\n    dispatch({\n      type: 'GET_EXPERIMENTS_REQUEST'\n    });\n    return api.get('experiments').then(response => {\n      dispatch({\n        type: 'GET_EXPERIMENTS_SUCCESS',\n        experiments: response.experiments\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'GET_EXPERIMENTS_ERROR',\n        err\n      });\n    });\n  };\n}\nexport function fetchPipelines() {\n  return function (dispatch) {\n    dispatch({\n      type: 'GET_PIPELINES_REQUEST'\n    });\n    return api.get('pipelines').then(response => dispatch({\n      type: 'GET_PIPELINES_SUCCESS',\n      pipelines: response.pipelines\n    })).catch(err => dispatch({\n      type: 'GET_PIPELINES_ERROR',\n      err\n    }));\n  };\n}\nexport function fetchDatasets() {\n  return function (dispatch) {\n    dispatch({\n      type: 'GET_DATASETS_REQUEST'\n    });\n    return api.get('datasets').then(response => {\n      dispatch({\n        type: 'GET_DATASETS_SUCCESS',\n        dataSets: response.datasets\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'GET_DATASETS_ERROR',\n        err\n      });\n    });\n  };\n}\nexport function fetchProjects() {\n  return function (dispatch) {\n    return dispatch(fetchExperiments()).then(() => dispatch(fetchPipelines()).then(() => dispatch(fetchDatasets())));\n  };\n}\nexport function selectProject(project) {\n  return function (dispatch) {\n    dispatch({\n      type: 'SELECT_PROJECT',\n      project\n    });\n  };\n}\nexport function selectPipeline(pipelineName) {\n  return function (dispatch) {\n    dispatch({\n      type: 'SELECT_PIPELINE',\n      pipelineName\n    });\n  };\n}\nexport function selectExperiment(experimentName) {\n  return function (dispatch) {\n    dispatch({\n      type: 'SELECT_EXPERIMENT',\n      experimentName\n    });\n  };\n}","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/model/actions/landing.js"],"names":["api","fetchExperiments","dispatch","type","get","then","response","experiments","catch","err","fetchPipelines","pipelines","fetchDatasets","dataSets","datasets","fetchProjects","selectProject","project","selectPipeline","pipelineName","selectExperiment","experimentName"],"mappings":"AAAA,SAASA,GAAT,QAAoB,SAApB,C,CAGA;AACA;AACA;;AAEA,OAAO,SAASC,gBAAT,GAA4B;AAC/B,SAAO,UAASC,QAAT,EAAmB;AACtBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,WAAOH,GAAG,CACLI,GADE,CACE,aADF,EAEFC,IAFE,CAEGC,QAAQ,IAAI;AACdJ,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,yBAAR;AAAmCI,QAAAA,WAAW,EAAED,QAAQ,CAACC;AAAzD,OAAD,CAAR;AACH,KAJE,EAKFC,KALE,CAKIC,GAAG,IAAI;AACVP,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,uBAAR;AAAiCM,QAAAA;AAAjC,OAAD,CAAR;AACH,KAPE,CAAP;AAQH,GAVD;AAWH;AAED,OAAO,SAASC,cAAT,GAA0B;AAC7B,SAAO,UAAUR,QAAV,EAAoB;AACvBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,WAAOH,GAAG,CACLI,GADE,CACE,WADF,EAEFC,IAFE,CAEGC,QAAQ,IAAIJ,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,uBAAR;AAAiCQ,MAAAA,SAAS,EAAEL,QAAQ,CAACK;AAArD,KAAD,CAFvB,EAGFH,KAHE,CAGIC,GAAG,IAAIP,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,qBAAR;AAA+BM,MAAAA;AAA/B,KAAD,CAHnB,CAAP;AAIH,GAND;AAOH;AAED,OAAO,SAASG,aAAT,GAAyB;AAC5B,SAAO,UAASV,QAAT,EAAmB;AACtBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,WAAOH,GAAG,CACLI,GADE,CACE,UADF,EAEFC,IAFE,CAEGC,QAAQ,IAAI;AACdJ,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,sBAAR;AAAgCU,QAAAA,QAAQ,EAAEP,QAAQ,CAACQ;AAAnD,OAAD,CAAR;AACH,KAJE,EAKFN,KALE,CAKIC,GAAG,IAAI;AACVP,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,oBAAR;AAA8BM,QAAAA;AAA9B,OAAD,CAAR;AACH,KAPE,CAAP;AAQH,GAVD;AAWH;AAED,OAAO,SAASM,aAAT,GAAyB;AAC5B,SAAO,UAASb,QAAT,EAAmB;AACtB,WAAOA,QAAQ,CAACD,gBAAgB,EAAjB,CAAR,CACFI,IADE,CACG,MAAMH,QAAQ,CAACQ,cAAc,EAAf,CAAR,CACPL,IADO,CACF,MAAMH,QAAQ,CAACU,aAAa,EAAd,CADZ,CADT,CAAP;AAIH,GALD;AAMH;AAED,OAAO,SAASI,aAAT,CAAuBC,OAAvB,EAAgC;AACnC,SAAO,UAASf,QAAT,EAAmB;AACtBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,gBAAR;AAA0Bc,MAAAA;AAA1B,KAAD,CAAR;AACH,GAFD;AAGH;AAED,OAAO,SAASC,cAAT,CAAwBC,YAAxB,EAAsC;AACzC,SAAO,UAASjB,QAAT,EAAmB;AACtBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,iBAAR;AAA2BgB,MAAAA;AAA3B,KAAD,CAAR;AACH,GAFD;AAGH;AAED,OAAO,SAASC,gBAAT,CAA2BC,cAA3B,EAA2C;AAC9C,SAAO,UAASnB,QAAT,EAAmB;AACtBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,mBAAR;AAA6BkB,MAAAA;AAA7B,KAAD,CAAR;AACH,GAFD;AAGH","sourcesContent":["import { api } from './utils';\n\n\n// http://127.0.0.1:3000/api/v1/experiments/\n// http://127.0.0.1:3000/api/v1/pipelines/\n// http://127.0.0.1:3000/api/v1/datasets/\n\nexport function fetchExperiments() {\n    return function(dispatch) {\n        dispatch({ type: 'GET_EXPERIMENTS_REQUEST' });\n        return api\n            .get('experiments')\n            .then(response => {\n                dispatch({ type: 'GET_EXPERIMENTS_SUCCESS', experiments: response.experiments });\n            })\n            .catch(err => {\n                dispatch({ type: 'GET_EXPERIMENTS_ERROR', err });\n            });\n    };\n}\n\nexport function fetchPipelines() {\n    return function (dispatch) {\n        dispatch({ type: 'GET_PIPELINES_REQUEST' });\n        return api\n            .get('pipelines')\n            .then(response => dispatch({ type: 'GET_PIPELINES_SUCCESS', pipelines: response.pipelines }))\n            .catch(err => dispatch({ type: 'GET_PIPELINES_ERROR', err }));\n    };\n}\n\nexport function fetchDatasets() {\n    return function(dispatch) {\n        dispatch({ type: 'GET_DATASETS_REQUEST' });\n        return api\n            .get('datasets')\n            .then(response => {\n                dispatch({ type: 'GET_DATASETS_SUCCESS', dataSets: response.datasets });\n            })\n            .catch(err => {\n                dispatch({ type: 'GET_DATASETS_ERROR', err });\n            });\n    };\n}\n\nexport function fetchProjects() {\n    return function(dispatch) {\n        return dispatch(fetchExperiments())\n            .then(() => dispatch(fetchPipelines())\n                .then(() => dispatch(fetchDatasets())),\n            );\n    };\n}\n\nexport function selectProject(project) {\n    return function(dispatch) {\n        dispatch({ type: 'SELECT_PROJECT', project });\n    };\n}\n\nexport function selectPipeline(pipelineName) {\n    return function(dispatch) {\n        dispatch({ type: 'SELECT_PIPELINE', pipelineName });\n    };\n}\n\nexport function selectExperiment (experimentName) {\n    return function(dispatch) {\n        dispatch({ type: 'SELECT_EXPERIMENT', experimentName });\n    };\n}\n"]},"metadata":{},"sourceType":"module"}