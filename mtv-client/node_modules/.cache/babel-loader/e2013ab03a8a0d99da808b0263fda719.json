{"ast":null,"code":"var _jsxFileName = \"/home/sergiu/Projects/mtv-react/src/components/Timeseries/Overview/DrawChart.jsx\";\nimport React, { useEffect, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { drawChart } from './chartUtils';\n\nclass DrawChart extends Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          dataRun = _this$props.dataRun,\n          onPeriodTimeChange = _this$props.onPeriodTimeChange,\n          selectedPeriod = _this$props.selectedPeriod;\n    const width = document.querySelector('.overview-wrapper').offsetWidth - 65;\n    const height = 36;\n    drawChart(width, height, dataRun, onPeriodTimeChange, selectedPeriod);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"_\".concat(this.props.dataRun.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }); // @TODO - find a better way to target this element\n  }\n\n} // const DrawChart = ({ dataRun, onPeriodTimeChange, selectedPeriod }) => {\n//   useEffect(() => {\n// const width = document.querySelector('.overview-wrapper').offsetWidth - 65;\n// const height = 36;\n// drawChart(width, height, dataRun, onPeriodTimeChange, selectedPeriod);\n//     console.log(selectedPeriod);\n//     debugger;\n//   }, [dataRun, onPeriodTimeChange, selectedPeriod]);\n//   return (\n//     <div className={`_${dataRun.id}`} /> // @TODO - find a better way to target this element\n//   );\n// };\n\n\nDrawChart.propTypes = {\n  dataRun: PropTypes.object,\n  onPeriodTimeChange: PropTypes.func,\n  selectedPeriod: PropTypes.array\n};\nexport default DrawChart;","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/components/Timeseries/Overview/DrawChart.jsx"],"names":["React","useEffect","Component","PropTypes","drawChart","DrawChart","componentDidMount","props","dataRun","onPeriodTimeChange","selectedPeriod","width","document","querySelector","offsetWidth","height","render","id","propTypes","object","func","array"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,SAAT,QAA0B,cAA1B;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,iBAAiB,GAAG;AAAA,wBACsC,KAAKC,KAD3C;AAAA,UACVC,OADU,eACVA,OADU;AAAA,UACDC,kBADC,eACDA,kBADC;AAAA,UACmBC,cADnB,eACmBA,cADnB;AAElB,UAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,EAA4CC,WAA5C,GAA0D,EAAxE;AACA,UAAMC,MAAM,GAAG,EAAf;AACAX,IAAAA,SAAS,CAACO,KAAD,EAAQI,MAAR,EAAgBP,OAAhB,EAAyBC,kBAAzB,EAA6CC,cAA7C,CAAT;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,WAAO;AAAK,MAAA,SAAS,aAAM,KAAKT,KAAL,CAAWC,OAAX,CAAmBS,EAAzB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP,CADO,CACiD;AACzD;;AAV+B,C,CAalC;AACA;AACI;AACA;AACA;AACJ;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEAZ,SAAS,CAACa,SAAV,GAAsB;AACpBV,EAAAA,OAAO,EAAEL,SAAS,CAACgB,MADC;AAEpBV,EAAAA,kBAAkB,EAAEN,SAAS,CAACiB,IAFV;AAGpBV,EAAAA,cAAc,EAAEP,SAAS,CAACkB;AAHN,CAAtB;AAMA,eAAehB,SAAf","sourcesContent":["import React, { useEffect, Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { drawChart } from './chartUtils';\n\nclass DrawChart extends Component {\n  componentDidMount() {\n    const { dataRun, onPeriodTimeChange, selectedPeriod } = this.props;\n    const width = document.querySelector('.overview-wrapper').offsetWidth - 65;\n    const height = 36;\n    drawChart(width, height, dataRun, onPeriodTimeChange, selectedPeriod);\n  }\n\n  render() {\n    return <div className={`_${this.props.dataRun.id}`} />; // @TODO - find a better way to target this element\n  }\n}\n\n// const DrawChart = ({ dataRun, onPeriodTimeChange, selectedPeriod }) => {\n//   useEffect(() => {\n    // const width = document.querySelector('.overview-wrapper').offsetWidth - 65;\n    // const height = 36;\n    // drawChart(width, height, dataRun, onPeriodTimeChange, selectedPeriod);\n//     console.log(selectedPeriod);\n//     debugger;\n//   }, [dataRun, onPeriodTimeChange, selectedPeriod]);\n\n//   return (\n//     <div className={`_${dataRun.id}`} /> // @TODO - find a better way to target this element\n//   );\n// };\n\nDrawChart.propTypes = {\n  dataRun: PropTypes.object,\n  onPeriodTimeChange: PropTypes.func,\n  selectedPeriod: PropTypes.array,\n};\n\nexport default DrawChart;\n"]},"metadata":{},"sourceType":"module"}