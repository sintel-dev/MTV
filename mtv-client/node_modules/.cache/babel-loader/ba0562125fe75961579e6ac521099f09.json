{"ast":null,"code":"var _jsxFileName = \"/home/sergiu/Projects/mtv-react/src/components/Landing/Experiments.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Loader from '../Common/Loader';\nimport { getFilteredExperiments } from '../../model/selectors/projects';\nimport { selectExperiment } from '../../model/actions/landing';\n\nconst renderExperiment = (experiment, index, onSelectExperiment) => React.createElement(\"div\", {\n  className: \"cell\",\n  key: index,\n  onClick: () => onSelectExperiment(experiment),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, \"#\", index + 1, \" \", experiment.dataset, \"_\", experiment.pipeline), React.createElement(\"div\", {\n  className: \"item-data\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, \"Signals: \", experiment.dataruns.length), React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \"DC: \", experiment.date_creation.substring(0, 10)))));\n\nconst Experiments = props => {\n  const filteredExperiments = props.filteredExperiments,\n        onSelectExperiment = props.onSelectExperiment;\n  return React.createElement(\"div\", {\n    className: \"item-row scroll-style\",\n    id: \"experiments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Experiments\"), React.createElement(\"div\", {\n    className: \"item-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    isLoading: filteredExperiments.isExperimentsLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, filteredExperiments.experimentsList.length ? filteredExperiments.experimentsList.map((experiment, index) => renderExperiment(experiment, index, onSelectExperiment)) : React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"No experiments found\"))));\n};\n\nExperiments.propTypes = {\n  filteredExperiments: PropTypes.object,\n  onSelectExperiment: PropTypes.func\n};\nexport default connect(state => ({\n  filteredExperiments: getFilteredExperiments(state)\n}), dispatch => ({\n  onSelectExperiment: experiment => dispatch(selectExperiment(experiment))\n}))(Experiments);","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/components/Landing/Experiments.jsx"],"names":["React","PropTypes","connect","Loader","getFilteredExperiments","selectExperiment","renderExperiment","experiment","index","onSelectExperiment","dataset","pipeline","dataruns","length","date_creation","substring","Experiments","props","filteredExperiments","isExperimentsLoading","experimentsList","map","propTypes","object","func","state","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,sBAAT,QAAuC,gCAAvC;AACA,SAASC,gBAAT,QAAiC,6BAAjC;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,UAAD,EAAaC,KAAb,EAAoBC,kBAApB,KACvB;AAAK,EAAA,SAAS,EAAC,MAAf;AAAsB,EAAA,GAAG,EAAED,KAA3B;AAAkC,EAAA,OAAO,EAAE,MAAMC,kBAAkB,CAACF,UAAD,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAMC,KAAK,GAAG,CAAd,OAAkBD,UAAU,CAACG,OAA7B,OAAuCH,UAAU,CAACI,QAAlD,CADF,EAEE;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAcJ,UAAU,CAACK,QAAX,CAAoBC,MAAlC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASN,UAAU,CAACO,aAAX,CAAyBC,SAAzB,CAAmC,CAAnC,EAAsC,EAAtC,CAAT,CAFF,CADF,CAFF,CADF;;AAYA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA,QACrBC,mBADqB,GACuBD,KADvB,CACrBC,mBADqB;AAAA,QACAT,kBADA,GACuBQ,KADvB,CACAR,kBADA;AAG7B,SACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAuC,IAAA,EAAE,EAAC,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAES,mBAAmB,CAACC,oBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEID,mBAAmB,CAACE,eAApB,CAAoCP,MAApC,GACEK,mBAAmB,CAACE,eAApB,CAAoCC,GAApC,CAAwC,CAACd,UAAD,EAAaC,KAAb,KACxCF,gBAAgB,CAACC,UAAD,EAAaC,KAAb,EAAoBC,kBAApB,CADhB,CADF,GAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALN,CADF,CAFF,CADF;AAcC,CAjBH;;AAmBAO,WAAW,CAACM,SAAZ,GAAwB;AACtBJ,EAAAA,mBAAmB,EAAEjB,SAAS,CAACsB,MADT;AAEtBd,EAAAA,kBAAkB,EAAER,SAAS,CAACuB;AAFR,CAAxB;AAKA,eAAetB,OAAO,CAACuB,KAAK,KAAK;AAC/BP,EAAAA,mBAAmB,EAAEd,sBAAsB,CAACqB,KAAD;AADZ,CAAL,CAAN,EAElBC,QAAQ,KAAK;AACfjB,EAAAA,kBAAkB,EAAGF,UAAD,IAAgBmB,QAAQ,CAACrB,gBAAgB,CAACE,UAAD,CAAjB;AAD7B,CAAL,CAFU,CAAP,CAIXS,WAJW,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Loader from '../Common/Loader';\nimport { getFilteredExperiments } from '../../model/selectors/projects';\nimport { selectExperiment } from '../../model/actions/landing';\n\nconst renderExperiment = (experiment, index, onSelectExperiment) => (\n  <div className=\"cell\" key={index} onClick={() => onSelectExperiment(experiment)}>\n    <h3>#{index + 1} {experiment.dataset}_{experiment.pipeline}</h3>\n    <div className=\"item-data\">\n      <ul>\n        <li>Signals: {experiment.dataruns.length}</li>\n        <li>DC: {experiment.date_creation.substring(0, 10)}</li>\n      </ul>\n    </div>\n  </div>\n);\n\nconst Experiments = (props) => {\n  const { filteredExperiments, onSelectExperiment } = props;\n\n  return (\n    <div className=\"item-row scroll-style\" id=\"experiments\">\n      <h2>Experiments</h2>\n      <div className=\"item-wrapper\">\n        <Loader isLoading={filteredExperiments.isExperimentsLoading}>\n          {\n            filteredExperiments.experimentsList.length ?\n              filteredExperiments.experimentsList.map((experiment, index) =>\n              renderExperiment(experiment, index, onSelectExperiment)) :\n              <h2>No experiments found</h2>\n          }\n        </Loader>\n      </div>\n    </div>);\n  };\n\nExperiments.propTypes = {\n  filteredExperiments: PropTypes.object,\n  onSelectExperiment: PropTypes.func,\n};\n\nexport default connect(state => ({\n  filteredExperiments: getFilteredExperiments(state),\n}), dispatch => ({\n  onSelectExperiment: (experiment) => dispatch(selectExperiment(experiment)),\n}))(Experiments);\n"]},"metadata":{},"sourceType":"module"}