{"ast":null,"code":"var _jsxFileName = \"/home/sergiu/Projects/mtv-react/src/components/Timeseries/Overview/Datarun.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DrawChart from './DrawChart';\nimport { onSelectDatarun } from '../../../model/actions/datarun';\nimport { selectedDatarunID } from '../../../model/selectors/datarun';\n\nconst Datarun = ({\n  datarun,\n  isLoading,\n  selectDatarun\n}) => React.createElement(\"div\", {\n  className: \"time-row\",\n  onClick: () => selectDatarun(datarun.id),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, datarun.signal), React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(DrawChart, {\n  dataRun: datarun,\n  isLoading: isLoading,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}))));\n\nDatarun.propTypes = {\n  datarun: PropTypes.object,\n  isLoading: PropTypes.bool,\n  selectDatarun: PropTypes.func\n};\nexport default connect(state => ({\n  selectedDatarun: getSelectedDatarunID(state)\n}), dispatch => ({\n  selectDatarun: datarunID => dispatch(onSelectDatarun(datarunID))\n}))(Datarun); // export default Datarun;","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/components/Timeseries/Overview/Datarun.jsx"],"names":["React","PropTypes","connect","DrawChart","onSelectDatarun","selectedDatarunID","Datarun","datarun","isLoading","selectDatarun","id","signal","propTypes","object","bool","func","state","selectedDatarun","getSelectedDatarunID","dispatch","datarunID"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,iBAAT,QAAkC,kCAAlC;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,SAAX;AAAsBC,EAAAA;AAAtB,CAAD,KACd;AAAK,EAAA,SAAS,EAAC,UAAf;AAA0B,EAAA,OAAO,EAAE,MAAMA,aAAa,CAACF,OAAO,CAACG,EAAT,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKH,OAAO,CAACI,MAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAI,oBAAC,SAAD;AAAW,EAAA,OAAO,EAAEJ,OAApB;AAA6B,EAAA,SAAS,EAAEC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAJ,CAFF,CADF,CADF;;AAQAF,OAAO,CAACM,SAAR,GAAoB;AAChBL,EAAAA,OAAO,EAAEN,SAAS,CAACY,MADH;AAEhBL,EAAAA,SAAS,EAAEP,SAAS,CAACa,IAFL;AAGhBL,EAAAA,aAAa,EAAER,SAAS,CAACc;AAHT,CAApB;AAMA,eAAeb,OAAO,CAACc,KAAK,KAAK;AAC7BC,EAAAA,eAAe,EAAEC,oBAAoB,CAACF,KAAD;AADR,CAAL,CAAN,EAElBG,QAAQ,KAAK;AACbV,EAAAA,aAAa,EAAGW,SAAD,IAAeD,QAAQ,CAACf,eAAe,CAACgB,SAAD,CAAhB;AADzB,CAAL,CAFU,CAAP,CAIXd,OAJW,CAAf,C,CAMA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport DrawChart from './DrawChart';\n\nimport { onSelectDatarun } from '../../../model/actions/datarun';\nimport { selectedDatarunID } from '../../../model/selectors/datarun';\n\nconst Datarun = ({ datarun, isLoading, selectDatarun }) => (\n  <div className=\"time-row\" onClick={() => selectDatarun(datarun.id)}>\n    <ul>\n      <li>{datarun.signal}</li>\n      <li><DrawChart dataRun={datarun} isLoading={isLoading} /></li>\n    </ul>\n  </div>);\n\nDatarun.propTypes = {\n    datarun: PropTypes.object,\n    isLoading: PropTypes.bool,\n    selectDatarun: PropTypes.func,\n};\n\nexport default connect(state => ({\n    selectedDatarun: getSelectedDatarunID(state),\n}), dispatch => ({\n    selectDatarun: (datarunID) => dispatch(onSelectDatarun(datarunID)),\n}))(Datarun);\n\n// export default Datarun;\n"]},"metadata":{},"sourceType":"module"}