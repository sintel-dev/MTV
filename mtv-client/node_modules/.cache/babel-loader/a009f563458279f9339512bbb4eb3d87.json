{"ast":null,"code":"import { createSelector } from 'reselect';\nexport const getSelectedExperimentData = state => state.experimentData;\n\nconst groupDataBy = (datarun, option) => {\n  debugger;\n  const indexValue = datarun.names.indexOf(option);\n  debugger;\n};\n\nexport const getProcessedData = createSelector([getSelectedExperimentData], experimentData => {\n  if (experimentData.isExperimentDataLoading) {\n    return;\n  }\n\n  experimentData.data.dataruns.map(datarun => {\n    const timeSeries = groupDataBy(datarun.prediction, 'y_raw');\n    debugger;\n    return {\n      timeSeries\n    };\n  });\n});","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/model/selectors/experiment.js"],"names":["createSelector","getSelectedExperimentData","state","experimentData","groupDataBy","datarun","option","indexValue","names","indexOf","getProcessedData","isExperimentDataLoading","data","dataruns","map","timeSeries","prediction"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AAEA,OAAO,MAAMC,yBAAyB,GAAIC,KAAD,IAAWA,KAAK,CAACC,cAAnD;;AAEP,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrC;AACA,QAAMC,UAAU,GAAGF,OAAO,CAACG,KAAR,CAAcC,OAAd,CAAsBH,MAAtB,CAAnB;AACA;AACH,CAJD;;AAOA,OAAO,MAAMI,gBAAgB,GAAGV,cAAc,CAC1C,CAACC,yBAAD,CAD0C,EAEzCE,cAAD,IAAoB;AAChB,MAAIA,cAAc,CAACQ,uBAAnB,EAA4C;AAAE;AAAS;;AAEvDR,EAAAA,cAAc,CAACS,IAAf,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiCT,OAAO,IAAI;AACxC,UAAMU,UAAU,GAAGX,WAAW,CAACC,OAAO,CAACW,UAAT,EAAqB,OAArB,CAA9B;AACA;AACA,WAAO;AACHD,MAAAA;AADG,KAAP;AAGH,GAND;AAOH,CAZyC,CAAvC","sourcesContent":["import { createSelector } from 'reselect';\n\nexport const getSelectedExperimentData = (state) => state.experimentData;\n\nconst groupDataBy = (datarun, option) => {\n    debugger;\n    const indexValue = datarun.names.indexOf(option);\n    debugger;\n};\n\n\nexport const getProcessedData = createSelector(\n    [getSelectedExperimentData],\n    (experimentData) => {\n        if (experimentData.isExperimentDataLoading) { return; }\n\n        experimentData.data.dataruns.map(datarun => {\n            const timeSeries = groupDataBy(datarun.prediction, 'y_raw');\n            debugger;\n            return {\n                timeSeries,\n            };\n        });\n    },\n);\n"]},"metadata":{},"sourceType":"module"}