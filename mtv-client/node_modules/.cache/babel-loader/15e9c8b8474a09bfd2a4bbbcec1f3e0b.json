{"ast":null,"code":"var _jsxFileName = \"/home/sergiu/Projects/mtv-react/src/components/Landing/Landing.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchProjects } from '../../model/actions/landing';\nimport { getProjectsData, getPipelinesData, getExperimentsData } from '../../model/selectors/projects';\nimport Projects from './Projects';\nimport Pipelines from './Pipelines';\nimport Experiments from './Experiments';\nimport './Landing.scss';\n\nclass Landing extends Component {\n  componentDidMount() {\n    this.props.fetchProjectsList();\n    this.onFilterExperiments = this.onFilterExperiments.bind(this);\n  }\n\n  filterExperimentsBy(pipeline) {\n    console.log('here we are');\n  }\n\n  render() {\n    const _this$props = this.props,\n          projectsData = _this$props.projectsData,\n          pipelinesData = _this$props.pipelinesData,\n          experimentsData = _this$props.experimentsData;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Projects, {\n      projects: projectsData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Pipelines, {\n      pipeLines: pipelinesData,\n      onFilterExperiments: this.filterExperimentsBy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Experiments, {\n      experiments: experimentsData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nLanding.propTypes = {\n  fetchProjectsList: PropTypes.func,\n  projectsData: PropTypes.object,\n  pipelinesData: PropTypes.object,\n  experimentsData: PropTypes.object\n};\nexport const mapStateToProps = state => ({\n  projectsData: getProjectsData(state),\n  pipelinesData: getPipelinesData(state),\n  experimentsData: getExperimentsData(state)\n});\nexport const mapDispatchToProps = dispatch => ({\n  fetchProjectsList: () => dispatch(fetchProjects())\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Landing);","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/components/Landing/Landing.jsx"],"names":["React","Component","connect","PropTypes","fetchProjects","getProjectsData","getPipelinesData","getExperimentsData","Projects","Pipelines","Experiments","Landing","componentDidMount","props","fetchProjectsList","onFilterExperiments","bind","filterExperimentsBy","pipeline","console","log","render","projectsData","pipelinesData","experimentsData","propTypes","func","object","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AAEA,SACEC,eADF,EAEEC,gBAFF,EAGEC,kBAHF,QAIO,gCAJP;AAOA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,gBAAP;;AAEA,MAAMC,OAAN,SAAsBV,SAAtB,CAAgC;AAC9BW,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,iBAAX;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACD;;AAEDC,EAAAA,mBAAmB,CAACC,QAAD,EAAW;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBAKH,KAAKR,KALF;AAAA,UAELS,YAFK,eAELA,YAFK;AAAA,UAGLC,aAHK,eAGLA,aAHK;AAAA,UAILC,eAJK,eAILA,eAJK;AAOP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEF,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEC,aAAtB;AAAqC,MAAA,mBAAmB,EAAE,KAAKN,mBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,WAAD;AAAa,MAAA,WAAW,EAAEO,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AAxB6B;;AA2BhCb,OAAO,CAACc,SAAR,GAAoB;AAChBX,EAAAA,iBAAiB,EAAEX,SAAS,CAACuB,IADb;AAEhBJ,EAAAA,YAAY,EAAEnB,SAAS,CAACwB,MAFR;AAGhBJ,EAAAA,aAAa,EAAEpB,SAAS,CAACwB,MAHT;AAIhBH,EAAAA,eAAe,EAAErB,SAAS,CAACwB;AAJX,CAApB;AAQA,OAAO,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACvCP,EAAAA,YAAY,EAAEjB,eAAe,CAACwB,KAAD,CADU;AAEvCN,EAAAA,aAAa,EAAEjB,gBAAgB,CAACuB,KAAD,CAFQ;AAGvCL,EAAAA,eAAe,EAAEjB,kBAAkB,CAACsB,KAAD;AAHI,CAAL,CAA7B;AAMP,OAAO,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AAC7CjB,EAAAA,iBAAiB,EAAE,MAAMiB,QAAQ,CAAC3B,aAAa,EAAd;AADY,CAAL,CAAnC;AAIP,eAAeF,OAAO,CAAC0B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchProjects } from '../../model/actions/landing';\n\nimport {\n  getProjectsData,\n  getPipelinesData,\n  getExperimentsData,\n} from '../../model/selectors/projects';\n\n\nimport Projects from './Projects';\nimport Pipelines from './Pipelines';\nimport Experiments from './Experiments';\n\nimport './Landing.scss';\n\nclass Landing extends Component {\n  componentDidMount() {\n    this.props.fetchProjectsList();\n    this.onFilterExperiments = this.onFilterExperiments.bind(this);\n  }\n\n  filterExperimentsBy(pipeline) {\n    console.log('here we are');\n  }\n\n  render() {\n    const {\n      projectsData,\n      pipelinesData,\n      experimentsData,\n    } = this.props;\n\n    return (\n      <div>\n        <Projects projects={projectsData} />\n        <Pipelines pipeLines={pipelinesData} onFilterExperiments={this.filterExperimentsBy} />\n        <Experiments experiments={experimentsData} />\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n    fetchProjectsList: PropTypes.func,\n    projectsData: PropTypes.object,\n    pipelinesData: PropTypes.object,\n    experimentsData: PropTypes.object,\n\n};\n\nexport const mapStateToProps = state => ({\n  projectsData: getProjectsData(state),\n  pipelinesData: getPipelinesData(state),\n  experimentsData: getExperimentsData(state),\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  fetchProjectsList: () => dispatch(fetchProjects()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Landing);\n"]},"metadata":{},"sourceType":"module"}