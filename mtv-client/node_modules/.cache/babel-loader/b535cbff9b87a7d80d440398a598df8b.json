{"ast":null,"code":"var _jsxFileName = \"/home/sergiu/Projects/mtv-react/src/components/Landing/Landing.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchProjects, selectPipeline } from '../../model/actions/landing';\nimport { getProjectsData, getPipelinesData // getExperimentsData,\n, getFilteredExperiments } from '../../model/selectors/projects';\nimport Projects from './Projects';\nimport Pipelines from './Pipelines';\nimport Experiments from './Experiments';\nimport './Landing.scss';\n\nclass Landing extends Component {\n  componentDidMount() {\n    this.props.fetchProjectsList();\n  }\n\n  render() {\n    const _this$props = this.props,\n          projectsData = _this$props.projectsData,\n          pipelinesData = _this$props.pipelinesData,\n          filteredExperiments = _this$props.filteredExperiments,\n          onSelectPipeline = _this$props.onSelectPipeline;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Projects, {\n      projects: projectsData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Pipelines, {\n      pipeLines: pipelinesData,\n      onPipelineSelect: onSelectPipeline,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Experiments, {\n      experiments: filteredExperiments,\n      isLoading: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nLanding.propTypes = {\n  fetchProjectsList: PropTypes.func,\n  projectsData: PropTypes.object,\n  pipelinesData: PropTypes.object,\n  filteredExperiments: PropTypes.array,\n  onSelectPipeline: PropTypes.func\n};\nexport const mapStateToProps = state => ({\n  projectsData: getProjectsData(state),\n  pipelinesData: getPipelinesData(state),\n  // experimentsData: getExperimentsData(state),\n  filteredExperiments: getFilteredExperiments(state)\n});\nexport const mapDispatchToProps = dispatch => ({\n  fetchProjectsList: () => dispatch(fetchProjects()),\n  onSelectPipeline: pipelineName => dispatch(selectPipeline(pipelineName))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Landing);","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/components/Landing/Landing.jsx"],"names":["React","Component","connect","PropTypes","fetchProjects","selectPipeline","getProjectsData","getPipelinesData","getFilteredExperiments","Projects","Pipelines","Experiments","Landing","componentDidMount","props","fetchProjectsList","render","projectsData","pipelinesData","filteredExperiments","onSelectPipeline","propTypes","func","object","array","mapStateToProps","state","mapDispatchToProps","dispatch","pipelineName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,aADF,EAEEC,cAFF,QAGQ,6BAHR;AAKA,SACEC,eADF,EAEEC,gBAFF,CAGE;AAHF,EAIEC,sBAJF,QAKO,gCALP;AAQA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,gBAAP;;AAEA,MAAMC,OAAN,SAAsBX,SAAtB,CAAgC;AAC9BY,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,iBAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBAMH,KAAKF,KANF;AAAA,UAELG,YAFK,eAELA,YAFK;AAAA,UAGLC,aAHK,eAGLA,aAHK;AAAA,UAILC,mBAJK,eAILA,mBAJK;AAAA,UAKLC,gBALK,eAKLA,gBALK;AAQP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEH,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEC,aAAtB;AAAqC,MAAA,gBAAgB,EAAEE,gBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,WAAD;AAAa,MAAA,WAAW,EAAED,mBAA1B;AAA+C,MAAA,SAAS,EAAE,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AApB6B;;AAuBhCP,OAAO,CAACS,SAAR,GAAoB;AAChBN,EAAAA,iBAAiB,EAAEZ,SAAS,CAACmB,IADb;AAEhBL,EAAAA,YAAY,EAAEd,SAAS,CAACoB,MAFR;AAGhBL,EAAAA,aAAa,EAAEf,SAAS,CAACoB,MAHT;AAIhBJ,EAAAA,mBAAmB,EAAEhB,SAAS,CAACqB,KAJf;AAKhBJ,EAAAA,gBAAgB,EAAEjB,SAAS,CAACmB;AALZ,CAApB;AAQA,OAAO,MAAMG,eAAe,GAAGC,KAAK,KAAK;AACvCT,EAAAA,YAAY,EAAEX,eAAe,CAACoB,KAAD,CADU;AAEvCR,EAAAA,aAAa,EAAEX,gBAAgB,CAACmB,KAAD,CAFQ;AAGvC;AACAP,EAAAA,mBAAmB,EAAEX,sBAAsB,CAACkB,KAAD;AAJJ,CAAL,CAA7B;AAOP,OAAO,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AAC7Cb,EAAAA,iBAAiB,EAAE,MAAMa,QAAQ,CAACxB,aAAa,EAAd,CADY;AAE7CgB,EAAAA,gBAAgB,EAAGS,YAAD,IAAkBD,QAAQ,CAACvB,cAAc,CAACwB,YAAD,CAAf;AAFC,CAAL,CAAnC;AAKP,eAAe3B,OAAO,CAACuB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  fetchProjects,\n  selectPipeline,\n } from '../../model/actions/landing';\n\nimport {\n  getProjectsData,\n  getPipelinesData,\n  // getExperimentsData,\n  getFilteredExperiments,\n} from '../../model/selectors/projects';\n\n\nimport Projects from './Projects';\nimport Pipelines from './Pipelines';\nimport Experiments from './Experiments';\n\nimport './Landing.scss';\n\nclass Landing extends Component {\n  componentDidMount() {\n    this.props.fetchProjectsList();\n  }\n\n  render() {\n    const {\n      projectsData,\n      pipelinesData,\n      filteredExperiments,\n      onSelectPipeline,\n    } = this.props;\n\n    return (\n      <div>\n        <Projects projects={projectsData} />\n        <Pipelines pipeLines={pipelinesData} onPipelineSelect={onSelectPipeline} />\n        <Experiments experiments={filteredExperiments} isLoading={false} />\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n    fetchProjectsList: PropTypes.func,\n    projectsData: PropTypes.object,\n    pipelinesData: PropTypes.object,\n    filteredExperiments: PropTypes.array,\n    onSelectPipeline: PropTypes.func,\n};\n\nexport const mapStateToProps = state => ({\n  projectsData: getProjectsData(state),\n  pipelinesData: getPipelinesData(state),\n  // experimentsData: getExperimentsData(state),\n  filteredExperiments: getFilteredExperiments(state),\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  fetchProjectsList: () => dispatch(fetchProjects()),\n  onSelectPipeline: (pipelineName) => dispatch(selectPipeline(pipelineName)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Landing);\n"]},"metadata":{},"sourceType":"module"}