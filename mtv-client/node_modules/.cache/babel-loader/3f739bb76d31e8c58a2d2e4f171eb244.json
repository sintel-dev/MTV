{"ast":null,"code":"var _jsxFileName = \"/home/sergiu/Projects/mtv-react/src/components/Landing/Experiments.jsx\";\nimport React from 'react';\nimport PropTypes, { bool } from 'prop-types';\nimport Loader from '../Common/Loader';\n\nconst renderExperiment = (experiment, index) => React.createElement(\"div\", {\n  className: \"cell\",\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, \"#\", index + 1, \" \", experiment.dataset, \"_\", experiment.pipeline), React.createElement(\"div\", {\n  className: \"item-data\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, \"Signals: \", experiment.dataruns.length), React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, \"DC: \", experiment.date_creation.substring(0, 10)))));\n\nconst Experiments = ({\n  experiments,\n  isLoading\n}) => React.createElement(\"div\", {\n  className: \"item-row scroll-style\",\n  id: \"experiments\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Experiments\"), React.createElement(\"div\", {\n  className: \"item-wrapper\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(Loader, {\n  isLoading: isLoading,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, experiments.experiments.length ? experiments.experiments.map(renderExperiment) : React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"No experiments found\"))));\n\nExperiments.propTypes = {\n  experiments: PropTypes.array,\n  isLoading: bool\n};\nexport default Experiments;","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/components/Landing/Experiments.jsx"],"names":["React","PropTypes","bool","Loader","renderExperiment","experiment","index","dataset","pipeline","dataruns","length","date_creation","substring","Experiments","experiments","isLoading","map","propTypes","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,IAAoBC,IAApB,QAAgC,YAAhC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,UAAD,EAAaC,KAAb,KAEvB;AAAK,EAAA,SAAS,EAAC,MAAf;AAAsB,EAAA,GAAG,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAMA,KAAK,GAAG,CAAd,OAAkBD,UAAU,CAACE,OAA7B,OAAuCF,UAAU,CAACG,QAAlD,CADF,EAEE;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAcH,UAAU,CAACI,QAAX,CAAoBC,MAAlC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASL,UAAU,CAACM,aAAX,CAAyBC,SAAzB,CAAmC,CAAnC,EAAsC,EAAtC,CAAT,CAFF,CADF,CAFF,CAFF;;AAaA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAClB;AAAK,EAAA,SAAS,EAAC,uBAAf;AAAuC,EAAA,EAAE,EAAC,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAQ,EAAA,SAAS,EAAEA,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEMD,WAAW,CAACA,WAAZ,CAAwBJ,MAAxB,GAAiCI,WAAW,CAACA,WAAZ,CAAwBE,GAAxB,CAA4BZ,gBAA5B,CAAjC,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHN,CADF,CAFF,CADF;;AAcAS,WAAW,CAACI,SAAZ,GAAwB;AACtBH,EAAAA,WAAW,EAAEb,SAAS,CAACiB,KADD;AAEtBH,EAAAA,SAAS,EAAEb;AAFW,CAAxB;AAKA,eAAeW,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes, { bool } from 'prop-types';\nimport Loader from '../Common/Loader';\n\nconst renderExperiment = (experiment, index) => (\n\n  <div className=\"cell\" key={index}>\n    <h3>#{index + 1} {experiment.dataset}_{experiment.pipeline}</h3>\n    <div className=\"item-data\">\n      <ul>\n        <li>Signals: {experiment.dataruns.length}</li>\n        <li>DC: {experiment.date_creation.substring(0, 10)}</li>\n      </ul>\n    </div>\n  </div>\n);\n\nconst Experiments = ({ experiments, isLoading }) => (\n  <div className=\"item-row scroll-style\" id=\"experiments\">\n    <h2>Experiments</h2>\n    <div className=\"item-wrapper\">\n      <Loader isLoading={isLoading}>\n        {\n            experiments.experiments.length ? experiments.experiments.map(renderExperiment) :\n            <h2>No experiments found</h2>\n          }\n      </Loader>\n    </div>\n  </div>\n  );\n\nExperiments.propTypes = {\n  experiments: PropTypes.array,\n  isLoading: bool,\n};\n\nexport default Experiments;\n"]},"metadata":{},"sourceType":"module"}