{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { getIsExperimentsLoading, getExperimentsData, getSelectedExperiment } from './projects';\nexport const getExperimentDataRun = state => state.experimentData.dataruns; // export const getSelectedExperimentData = createSelector(\n//     [getIsExperimentsLoading, getExperimentsData, getSelectedExperiment, getExperimentDataRun],\n//     (isExperimentsLoading, experiments, selectedExperimentID, dataRun) => {\n//         // if (isExperimentsLoading) { return null; }\n//         const { experimentsList } = experiments;\n//         const experimentData = experimentsList.filter(experiment => experiment.id === selectedExperimentID);\n//         return experimentData;\n//     },\n// );\n\nexport const getSelectedExperimentData = state => state.experimentData; // export const getExperimentDataRun = (state) => state.experimentData.dataruns;","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/model/selectors/experiment.js"],"names":["createSelector","getIsExperimentsLoading","getExperimentsData","getSelectedExperiment","getExperimentDataRun","state","experimentData","dataruns","getSelectedExperimentData"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,uBAAT,EAAkCC,kBAAlC,EAAsDC,qBAAtD,QAAmF,YAAnF;AAEA,OAAO,MAAMC,oBAAoB,GAAIC,KAAD,IAAWA,KAAK,CAACC,cAAN,CAAqBC,QAA7D,C,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,yBAAyB,GAAIH,KAAD,IAAWA,KAAK,CAACC,cAAnD,C,CAGP","sourcesContent":["import { createSelector } from 'reselect';\nimport { getIsExperimentsLoading, getExperimentsData, getSelectedExperiment } from './projects';\n\nexport const getExperimentDataRun = (state) => state.experimentData.dataruns;\n\n// export const getSelectedExperimentData = createSelector(\n//     [getIsExperimentsLoading, getExperimentsData, getSelectedExperiment, getExperimentDataRun],\n//     (isExperimentsLoading, experiments, selectedExperimentID, dataRun) => {\n//         // if (isExperimentsLoading) { return null; }\n//         const { experimentsList } = experiments;\n//         const experimentData = experimentsList.filter(experiment => experiment.id === selectedExperimentID);\n//         return experimentData;\n//     },\n// );\n\nexport const getSelectedExperimentData = (state) => state.experimentData;\n\n\n// export const getExperimentDataRun = (state) => state.experimentData.dataruns;\n"]},"metadata":{},"sourceType":"module"}