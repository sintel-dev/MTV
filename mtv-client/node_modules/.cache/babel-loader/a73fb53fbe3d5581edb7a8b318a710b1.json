{"ast":null,"code":"var _jsxFileName = \"/home/sergiu/Projects/mtv-react/src/components/Timeseries/Overview/Experiment.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './Overview.scss';\nimport { getSelectedExperimentData, getProcessedDataRun } from '../../../model/selectors/experiment';\nimport Loader from '../../Common/Loader';\nimport DrawChart from './DrawChart';\n\nconst onSelectDatarun = (event, datarun) => {\n  console.log(event.target);\n  event.target.classList.add('active');\n};\n\nconst renderDatarun = (datarun, key, isLoading) => React.createElement(\"div\", {\n  key: key,\n  className: \"time-row\",\n  onClick: event => onSelectDatarun(event, datarun),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, datarun.signal), React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(DrawChart, {\n  dataRun: datarun,\n  isLoading: isLoading,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}))));\n\nfunction Experiment({\n  experimentData,\n  processedDatarun\n}) {\n  return React.createElement(\"div\", {\n    className: \"overview-wrapper scroll-style\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    isLoading: experimentData.isExperimentDataLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, !experimentData.isExperimentDataLoading && experimentData.data.dataruns.length ? processedDatarun.map((datarun, key) => renderDatarun(datarun, key, experimentData.isExperimentDataLoading)) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"No datarun for this experiment\")));\n}\n\nExperiment.propTypes = {\n  experimentData: PropTypes.object,\n  processedDatarun: PropTypes.array\n};\nexport default connect(state => ({\n  experimentData: getSelectedExperimentData(state),\n  processedDatarun: getProcessedDataRun(state)\n}), null)(Experiment);","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/components/Timeseries/Overview/Experiment.jsx"],"names":["React","connect","PropTypes","getSelectedExperimentData","getProcessedDataRun","Loader","DrawChart","onSelectDatarun","event","datarun","console","log","target","classList","add","renderDatarun","key","isLoading","signal","Experiment","experimentData","processedDatarun","isExperimentDataLoading","data","dataruns","length","map","propTypes","object","array","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,iBAAP;AAEA,SAASC,yBAAT,EAAoCC,mBAApC,QAA+D,qCAA/D;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAGA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,MAAlB;AACAJ,EAAAA,KAAK,CAACI,MAAN,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,QAA3B;AACD,CAHD;;AAKA,MAAMC,aAAa,GAAG,CAACN,OAAD,EAAUO,GAAV,EAAeC,SAAf,KACpB;AAAK,EAAA,GAAG,EAAED,GAAV;AAAe,EAAA,SAAS,EAAC,UAAzB;AAAoC,EAAA,OAAO,EAAGR,KAAD,IAAWD,eAAe,CAACC,KAAD,EAAQC,OAAR,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,OAAO,CAACS,MAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAI,oBAAC,SAAD;AAAW,EAAA,OAAO,EAAET,OAApB;AAA6B,EAAA,SAAS,EAAEQ,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAJ,CAFF,CADF,CADF;;AAQA,SAASE,UAAT,CAAoB;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAApB,EAA0D;AACtD,SACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAED,cAAc,CAACE,uBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,CAACF,cAAc,CAACE,uBAAhB,IAA2CF,cAAc,CAACG,IAAf,CAAoBC,QAApB,CAA6BC,MAAxE,GACEJ,gBAAgB,CAACK,GAAjB,CAAqB,CAACjB,OAAD,EAAUO,GAAV,KAAkBD,aAAa,CAACN,OAAD,EAAUO,GAAV,EAAeI,cAAc,CAACE,uBAA9B,CAApD,CADF,GAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAJN,CADF,CADF;AAWH;;AAEDH,UAAU,CAACQ,SAAX,GAAuB;AACnBP,EAAAA,cAAc,EAAElB,SAAS,CAAC0B,MADP;AAEnBP,EAAAA,gBAAgB,EAAEnB,SAAS,CAAC2B;AAFT,CAAvB;AAKA,eAAe5B,OAAO,CAAC6B,KAAK,KAAK;AAC7BV,EAAAA,cAAc,EAAEjB,yBAAyB,CAAC2B,KAAD,CADZ;AAE7BT,EAAAA,gBAAgB,EAAEjB,mBAAmB,CAAC0B,KAAD;AAFR,CAAL,CAAN,EAGlB,IAHkB,CAAP,CAGLX,UAHK,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './Overview.scss';\n\nimport { getSelectedExperimentData, getProcessedDataRun } from '../../../model/selectors/experiment';\nimport Loader from '../../Common/Loader';\nimport DrawChart from './DrawChart';\n\n\nconst onSelectDatarun = (event, datarun) => {\n  console.log(event.target);\n  event.target.classList.add('active');\n};\n\nconst renderDatarun = (datarun, key, isLoading) => (\n  <div key={key} className=\"time-row\" onClick={(event) => onSelectDatarun(event, datarun)}>\n    <ul>\n      <li>{datarun.signal}</li>\n      <li><DrawChart dataRun={datarun} isLoading={isLoading} /></li>\n    </ul>\n  </div>);\n\nfunction Experiment({ experimentData, processedDatarun }) {\n    return (\n      <div className=\"overview-wrapper scroll-style\">\n        <Loader isLoading={experimentData.isExperimentDataLoading}>\n          {\n            !experimentData.isExperimentDataLoading && experimentData.data.dataruns.length ?\n              processedDatarun.map((datarun, key) => renderDatarun(datarun, key, experimentData.isExperimentDataLoading)) :\n              <p>No datarun for this experiment</p>\n          }\n        </Loader>\n      </div>\n    );\n}\n\nExperiment.propTypes = {\n    experimentData: PropTypes.object,\n    processedDatarun: PropTypes.array,\n};\n\nexport default connect(state => ({\n    experimentData: getSelectedExperimentData(state),\n    processedDatarun: getProcessedDataRun(state),\n}), null)(Experiment);\n"]},"metadata":{},"sourceType":"module"}