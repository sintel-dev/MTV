{"ast":null,"code":"var _jsxFileName = \"/home/sergiu/Projects/mtv-react/src/components/Timeseries/Overview/DrawChart.jsx\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst DrawChart = props => {\n  // const width = document.querySelector('.overview-wrapper').offsetWidth - 60;\n  const width = 1000;\n  const height = 36;\n  useEffect(drawChart);\n\n  function getScale(w, h) {\n    let minValue = Number.MAX_SAFE_INTEGER;\n    let maxValue = Number.MIN_SAFE_INTEGER;\n    const timeSeries = props.dataRun.timeSeries;\n    const timeSeriesMin = timeSeries[0][0];\n    const timeSeriesMax = timeSeries[timeSeries.length - 1][0];\n    const x = d3.scaleTime().range([0, w]);\n    const y = d3.scaleLinear().range([h, 0]);\n    minValue = minValue > timeSeriesMin ? timeSeriesMin : minValue;\n    maxValue = maxValue < timeSeriesMax ? timeSeriesMax : maxValue;\n    x.domain([minValue, maxValue]);\n    y.domain([-1, 1]);\n    return {\n      x,\n      y\n    };\n  }\n\n  function drawChart() {\n    const chartWidth = width - 10;\n    const _props$dataRun = props.dataRun,\n          timeSeries = _props$dataRun.timeSeries,\n          eventWindows = _props$dataRun.eventWindows;\n\n    const _getScale = getScale(chartWidth, height),\n          x = _getScale.x,\n          y = _getScale.y;\n\n    const line = d3.line().x(d => x(d[0])).y(d => y(d[1]));\n    const highlightedEvents = eventWindows.map(event => timeSeries.slice(event[0], event[1] + 2));\n    const svg = d3.select(\"._\".concat(props.dataRun.id)).append('svg').attr('width', chartWidth).attr('class', 'wave-chart');\n    svg.append('path').attr('class', 'wave-data').attr('d', line(timeSeries)).attr('transform', 'translate(10, 6)');\n    highlightedEvents.map(event => svg.append('path').attr('class', 'wave-event').attr('transform', 'translate(10, 6)').attr('d', line(event)));\n    drawBrush(svg);\n  }\n\n  function drawBrush(element) {\n    const brushHeight = 43;\n    const xRange = d3.scaleTime().range([0, width]);\n    const brush = d3.brushX().extent([[0, 0], [width, brushHeight]]);\n    const brushContext = element.append('g').attr('class', 'brushContext');\n    brushContext.append('g').attr('class', 'brush').attr('transform', 'translate(5, 3)').call(brush).call(brush.move, xRange.range());\n    brush.on('brush end', brushChange.bind(this));\n\n    function brushChange() {\n      if (d3.event.sourceEvent && d3.event.sourceEvent.type === 'zoom') return;\n      props.onPeriodTimeChange(d3.event.selection);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"_\".concat(props.dataRun.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }) // @TODO - find a better way to target this element\n  ;\n};\n\nDrawChart.propTypes = {\n  dataRun: PropTypes.object,\n  onPeriodTimeChange: PropTypes.func\n};\nexport default DrawChart;","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/components/Timeseries/Overview/DrawChart.jsx"],"names":["React","useEffect","PropTypes","d3","DrawChart","props","width","height","drawChart","getScale","w","h","minValue","Number","MAX_SAFE_INTEGER","maxValue","MIN_SAFE_INTEGER","timeSeries","dataRun","timeSeriesMin","timeSeriesMax","length","x","scaleTime","range","y","scaleLinear","domain","chartWidth","eventWindows","line","d","highlightedEvents","map","event","slice","svg","select","id","append","attr","drawBrush","element","brushHeight","xRange","brush","brushX","extent","brushContext","call","move","on","brushChange","bind","sourceEvent","type","onPeriodTimeChange","selection","propTypes","object","func"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst DrawChart = (props) => {\n  // const width = document.querySelector('.overview-wrapper').offsetWidth - 60;\n  const width = 1000;\n  const height = 36;\n    useEffect(drawChart);\n\n    function getScale(w, h) {\n      let minValue = Number.MAX_SAFE_INTEGER;\n      let maxValue = Number.MIN_SAFE_INTEGER;\n      const { timeSeries } = props.dataRun;\n      const timeSeriesMin = timeSeries[0][0];\n      const timeSeriesMax = timeSeries[timeSeries.length - 1][0];\n      const x = d3.scaleTime().range([0, w]);\n      const y = d3.scaleLinear().range([h, 0]);\n\n      minValue = minValue > timeSeriesMin ? timeSeriesMin : minValue;\n      maxValue = maxValue < timeSeriesMax ? timeSeriesMax : maxValue;\n      x.domain([minValue, maxValue]);\n      y.domain([-1, 1]);\n\n      return { x, y };\n    }\n\n    function drawChart() {\n      const chartWidth = width - 10;\n\n      const { timeSeries, eventWindows } = props.dataRun;\n      const { x, y } = getScale(chartWidth, height);\n      const line = d3.line()\n        .x(d => x(d[0]))\n        .y(d => y(d[1]));\n\n      const highlightedEvents = eventWindows.map(event => timeSeries.slice(event[0], event[1] + 2));\n      const svg = d3.select(`._${props.dataRun.id}`)\n        .append('svg')\n        .attr('width', chartWidth)\n        .attr('class', 'wave-chart');\n\n      svg.append('path')\n        .attr('class', 'wave-data')\n        .attr('d', line(timeSeries))\n        .attr('transform', 'translate(10, 6)');\n\n      highlightedEvents.map(event =>\n        svg.append('path')\n          .attr('class', 'wave-event')\n          .attr('transform', 'translate(10, 6)')\n          .attr('d', line(event)),\n      );\n      drawBrush(svg);\n    }\n\n    function drawBrush (element) {\n      const brushHeight = 43;\n      const xRange = d3.scaleTime().range([0, width]);\n      const brush = d3.brushX()\n        .extent([[0, 0], [width, brushHeight]]);\n      const brushContext = element.append('g').attr('class', 'brushContext');\n\n      brushContext.append('g')\n        .attr('class', 'brush')\n        .attr('transform', 'translate(5, 3)')\n        .call(brush)\n        .call(brush.move, xRange.range());\n\n        brush.on('brush end', brushChange.bind(this));\n\n      function brushChange() {\n        if (d3.event.sourceEvent && d3.event.sourceEvent.type === 'zoom') return;\n        props.onPeriodTimeChange(d3.event.selection);\n      }\n    }\n\n      return (\n        <div className={`_${props.dataRun.id}`} /> // @TODO - find a better way to target this element\n      );\n};\n\nDrawChart.propTypes = {\n  dataRun: PropTypes.object,\n  onPeriodTimeChange: PropTypes.func,\n};\n\nexport default DrawChart;\n"]},"metadata":{},"sourceType":"module"}