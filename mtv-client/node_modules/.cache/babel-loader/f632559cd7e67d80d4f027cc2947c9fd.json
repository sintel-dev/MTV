{"ast":null,"code":"var _jsxFileName = \"/home/sergiu/Projects/mtv-react/src/components/Landing/Landing.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchProjects, selectPipeline } from '../../model/actions/landing';\nimport { getProjectsData, getPipelinesData, getExperimentsData } from '../../model/selectors/projects';\nimport Projects from './Projects';\nimport Pipelines from './Pipelines';\nimport Experiments from './Experiments';\nimport './Landing.scss';\n\nclass Landing extends Component {\n  constructor(...args) {\n    super(...args);\n    this.filterExperimentsBy = this.filterExperimentsBy.bind(this);\n    this.state = {\n      experimentsData: {}\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchProjectsList();\n  }\n\n  render() {\n    const _this$props = this.props,\n          projectsData = _this$props.projectsData,\n          pipelinesData = _this$props.pipelinesData,\n          experimentsData = _this$props.experimentsData,\n          onSelectPipeline = _this$props.onSelectPipeline;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Projects, {\n      projects: projectsData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Pipelines, {\n      pipeLines: pipelinesData,\n      onPipelineSelect: onSelectPipeline,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Experiments, {\n      experiments: experimentsData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}\n\nLanding.propTypes = {\n  fetchProjectsList: PropTypes.func,\n  projectsData: PropTypes.object,\n  pipelinesData: PropTypes.object,\n  experimentsData: PropTypes.object,\n  onSelectPipeline: PropTypes.func\n};\nexport const mapStateToProps = state => ({\n  projectsData: getProjectsData(state),\n  pipelinesData: getPipelinesData(state),\n  experimentsData: getExperimentsData(state)\n});\nexport const mapDispatchToProps = dispatch => ({\n  fetchProjectsList: () => dispatch(fetchProjects()),\n  onSelectPipeline: pipelineName => dispatch(selectPipeline(pipelineName))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Landing);","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/components/Landing/Landing.jsx"],"names":["React","Component","connect","PropTypes","fetchProjects","selectPipeline","getProjectsData","getPipelinesData","getExperimentsData","Projects","Pipelines","Experiments","Landing","constructor","args","filterExperimentsBy","bind","state","experimentsData","componentDidMount","props","fetchProjectsList","render","projectsData","pipelinesData","onSelectPipeline","propTypes","func","object","mapStateToProps","mapDispatchToProps","dispatch","pipelineName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,aADF,EAEEC,cAFF,QAGQ,6BAHR;AAKA,SACEC,eADF,EAEEC,gBAFF,EAGEC,kBAHF,QAIO,gCAJP;AAOA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,gBAAP;;AAEA,MAAMC,OAAN,SAAsBX,SAAtB,CAAgC;AAC9BY,EAAAA,WAAW,CAAC,GAAGC,IAAJ,EAAU;AACnB,UAAM,GAAGA,IAAT;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAE;AADN,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,iBAAX;AACD;;AAGDC,EAAAA,MAAM,GAAG;AAAA,wBAMH,KAAKF,KANF;AAAA,UAELG,YAFK,eAELA,YAFK;AAAA,UAGLC,aAHK,eAGLA,aAHK;AAAA,UAILN,eAJK,eAILA,eAJK;AAAA,UAKLO,gBALK,eAKLA,gBALK;AAQP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEF,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEC,aAAtB;AAAqC,MAAA,gBAAgB,EAAEC,gBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,WAAD;AAAa,MAAA,WAAW,EAAEP,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AA7B6B;;AAgChCN,OAAO,CAACc,SAAR,GAAoB;AAChBL,EAAAA,iBAAiB,EAAElB,SAAS,CAACwB,IADb;AAEhBJ,EAAAA,YAAY,EAAEpB,SAAS,CAACyB,MAFR;AAGhBJ,EAAAA,aAAa,EAAErB,SAAS,CAACyB,MAHT;AAIhBV,EAAAA,eAAe,EAAEf,SAAS,CAACyB,MAJX;AAKhBH,EAAAA,gBAAgB,EAAEtB,SAAS,CAACwB;AALZ,CAApB;AAQA,OAAO,MAAME,eAAe,GAAGZ,KAAK,KAAK;AACvCM,EAAAA,YAAY,EAAEjB,eAAe,CAACW,KAAD,CADU;AAEvCO,EAAAA,aAAa,EAAEjB,gBAAgB,CAACU,KAAD,CAFQ;AAGvCC,EAAAA,eAAe,EAAEV,kBAAkB,CAACS,KAAD;AAHI,CAAL,CAA7B;AAMP,OAAO,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AAC7CV,EAAAA,iBAAiB,EAAE,MAAMU,QAAQ,CAAC3B,aAAa,EAAd,CADY;AAE7CqB,EAAAA,gBAAgB,EAAGO,YAAD,IAAkBD,QAAQ,CAAC1B,cAAc,CAAC2B,YAAD,CAAf;AAFC,CAAL,CAAnC;AAKP,eAAe9B,OAAO,CAAC2B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6ClB,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  fetchProjects,\n  selectPipeline,\n } from '../../model/actions/landing';\n\nimport {\n  getProjectsData,\n  getPipelinesData,\n  getExperimentsData,\n} from '../../model/selectors/projects';\n\n\nimport Projects from './Projects';\nimport Pipelines from './Pipelines';\nimport Experiments from './Experiments';\n\nimport './Landing.scss';\n\nclass Landing extends Component {\n  constructor(...args) {\n    super(...args);\n    this.filterExperimentsBy = this.filterExperimentsBy.bind(this);\n    this.state = {\n      experimentsData: {},\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchProjectsList();\n  }\n\n\n  render() {\n    const {\n      projectsData,\n      pipelinesData,\n      experimentsData,\n      onSelectPipeline,\n    } = this.props;\n\n    return (\n      <div>\n        <Projects projects={projectsData} />\n        <Pipelines pipeLines={pipelinesData} onPipelineSelect={onSelectPipeline} />\n        <Experiments experiments={experimentsData} />\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n    fetchProjectsList: PropTypes.func,\n    projectsData: PropTypes.object,\n    pipelinesData: PropTypes.object,\n    experimentsData: PropTypes.object,\n    onSelectPipeline: PropTypes.func,\n};\n\nexport const mapStateToProps = state => ({\n  projectsData: getProjectsData(state),\n  pipelinesData: getPipelinesData(state),\n  experimentsData: getExperimentsData(state),\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  fetchProjectsList: () => dispatch(fetchProjects()),\n  onSelectPipeline: (pipelineName) => dispatch(selectPipeline(pipelineName)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Landing);\n"]},"metadata":{},"sourceType":"module"}