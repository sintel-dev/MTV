{"ast":null,"code":"var _jsxFileName = \"/home/sergiu/Projects/mtv-react/src/components/Timeseries/Overview/DrawChart.jsx\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as data from './tmpData';\n\nclass DrawChart extends Component {\n  componentDidMount() {\n    this.svgRoot = React.createRef();\n    this.drawChart();\n  }\n\n  getScale(w, h) {\n    const x = d3.scaleTime().range([0, w]);\n    const y = d3.scaleLinear().range([h, 0]);\n    return {\n      x,\n      y\n    };\n  }\n\n  drawChart() {\n    const stroke = 'rgb(36, 116, 241, 0.7)';\n    const strokeWidth = 1;\n    const svgData = data.svgData;\n    const w = 300;\n    const h = 300;\n\n    const _this$getScale = this.getScale(500, 20),\n          x = _this$getScale.x,\n          y = _this$getScale.y;\n\n    const line = d3.line().x(d => {\n      console.log(d); // debugger;\n\n      return d[0];\n    }).y(d => d[1]);\n    const svg = d3.select('.single-chart').append('svg').attr('width', w).attr('height', h);\n    svg.append('path').attr('stroke', stroke).attr('stroke-width', strokeWidth).attr('class', 'line-data').attr('d', line(svgData)); // svg.append('path').attr('class', 'line-highlight');\n    // svg.select('.line-data')\n    // .enter()\n    // .append('d', line(svgData));\n    // svgData.map((pathData, index) => {\n    //     console.log(pathData[0], pathData[1]);\n    //     return pathData;\n    // });\n    // ;\n    // svg.selectAll('rect')\n    //   .data(data)\n    //   .enter()\n    //   .append('rect')\n    //   .attr('x', (d, i) => i * 70)\n    //   .attr('y', (d, i) => h - 10 * d)\n    //   .attr('width', 65)\n    //   .attr('height', (d, i) => d * 10)\n    //   .attr('fill', 'green');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"single-chart\",\n      ref: this.svgRoot,\n      style: {\n        height: '100%',\n        width: '500px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Chart planning here\"));\n  }\n\n}\n\nexport default DrawChart;","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/components/Timeseries/Overview/DrawChart.jsx"],"names":["React","Component","d3","data","DrawChart","componentDidMount","svgRoot","createRef","drawChart","getScale","w","h","x","scaleTime","range","y","scaleLinear","stroke","strokeWidth","svgData","line","d","console","log","svg","select","append","attr","render","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAC9BI,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,OAAL,GAAeN,KAAK,CAACO,SAAN,EAAf;AACA,SAAKC,SAAL;AACH;;AAEDC,EAAAA,QAAQ,CAACC,CAAD,EAAIC,CAAJ,EAAO;AACb,UAAMC,CAAC,GAAGV,EAAE,CAACW,SAAH,GAAeC,KAAf,CAAqB,CAAC,CAAD,EAAIJ,CAAJ,CAArB,CAAV;AACA,UAAMK,CAAC,GAAGb,EAAE,CAACc,WAAH,GAAiBF,KAAjB,CAAuB,CAACH,CAAD,EAAI,CAAJ,CAAvB,CAAV;AACA,WAAO;AAAEC,MAAAA,CAAF;AAAKG,MAAAA;AAAL,KAAP;AACD;;AAEDP,EAAAA,SAAS,GAAG;AACV,UAAMS,MAAM,GAAG,wBAAf;AACA,UAAMC,WAAW,GAAG,CAApB;AAFU,UAIFC,OAJE,GAIUhB,IAJV,CAIFgB,OAJE;AAMV,UAAMT,CAAC,GAAG,GAAV;AACA,UAAMC,CAAC,GAAG,GAAV;;AAPU,2BAQO,KAAKF,QAAL,CAAc,GAAd,EAAmB,EAAnB,CARP;AAAA,UAQFG,CARE,kBAQFA,CARE;AAAA,UAQCG,CARD,kBAQCA,CARD;;AASV,UAAMK,IAAI,GAAGlB,EAAE,CAACkB,IAAH,GACVR,CADU,CACRS,CAAC,IAAI;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,EADM,CAEN;;AACA,aAAOA,CAAC,CAAC,CAAD,CAAR;AACD,KALU,EAMVN,CANU,CAMRM,CAAC,IAAIA,CAAC,CAAC,CAAD,CANE,CAAb;AAQA,UAAMG,GAAG,GAAGtB,EAAE,CAACuB,MAAH,CAAU,eAAV,EACTC,MADS,CACF,KADE,EAETC,IAFS,CAEJ,OAFI,EAEKjB,CAFL,EAGTiB,IAHS,CAGJ,QAHI,EAGMhB,CAHN,CAAZ;AAIAa,IAAAA,GAAG,CAACE,MAAJ,CAAW,MAAX,EACGC,IADH,CACQ,QADR,EACkBV,MADlB,EAEGU,IAFH,CAEQ,cAFR,EAEwBT,WAFxB,EAGGS,IAHH,CAGQ,OAHR,EAGiB,WAHjB,EAIGA,IAJH,CAIQ,GAJR,EAIaP,IAAI,CAACD,OAAD,CAJjB,EArBU,CA2BV;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,GAAG,EAAE,KAAKtB,OAAxC;AAAiD,MAAA,KAAK,EAAE;AAAEuB,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CADF;AAMH;;AAxE6B;;AA2ElC,eAAe1B,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as data from './tmpData';\n\nclass DrawChart extends Component {\n    componentDidMount() {\n        this.svgRoot = React.createRef();\n        this.drawChart();\n    }\n\n    getScale(w, h) {\n      const x = d3.scaleTime().range([0, w]);\n      const y = d3.scaleLinear().range([h, 0]);\n      return { x, y };\n    }\n\n    drawChart() {\n      const stroke = 'rgb(36, 116, 241, 0.7)';\n      const strokeWidth = 1;\n\n      const { svgData } = data;\n\n      const w = 300;\n      const h = 300;\n      const { x, y } = this.getScale(500, 20);\n      const line = d3.line()\n        .x(d => {\n          console.log(d);\n          // debugger;\n          return d[0];\n        })\n        .y(d => d[1]);\n\n      const svg = d3.select('.single-chart')\n        .append('svg')\n        .attr('width', w)\n        .attr('height', h);\n      svg.append('path')\n        .attr('stroke', stroke)\n        .attr('stroke-width', strokeWidth)\n        .attr('class', 'line-data')\n        .attr('d', line(svgData));\n\n      // svg.append('path').attr('class', 'line-highlight');\n\n\n      // svg.select('.line-data')\n      // .enter()\n      // .append('d', line(svgData));\n\n      // svgData.map((pathData, index) => {\n\n      //     console.log(pathData[0], pathData[1]);\n      //     return pathData;\n      // });\n      // ;\n\n\n      // svg.selectAll('rect')\n      //   .data(data)\n      //   .enter()\n      //   .append('rect')\n      //   .attr('x', (d, i) => i * 70)\n      //   .attr('y', (d, i) => h - 10 * d)\n      //   .attr('width', 65)\n      //   .attr('height', (d, i) => d * 10)\n      //   .attr('fill', 'green');\n    }\n\n    render() {\n        return (\n          <div>\n\n            <div className=\"single-chart\" ref={this.svgRoot} style={{ height: '100%', width: '500px' }}>Chart planning here</div>\n          </div>\n        );\n    }\n}\n\nexport default DrawChart;\n"]},"metadata":{},"sourceType":"module"}