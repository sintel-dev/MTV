{"ast":null,"code":"var _jsxFileName = \"/home/sergiu/Projects/mtv-react/src/components/Timeseries/Overview/DrawChart.jsx\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as data from './tmpData';\nconst svgData = data.svgData;\n\nclass DrawChart extends Component {\n  componentDidMount() {\n    this.svgRoot = React.createRef(); // this.drawChart();\n  }\n\n  getScale(w, h) {\n    const x = d3.scaleTime().range([0, w]);\n    x.domain([1222819200000, 1468864800000]);\n    const y = d3.scaleLinear().range([h, 0]);\n    y.domain([-1, 1]);\n    return {\n      x,\n      y\n    };\n  }\n\n  drawChart() {\n    const timeSeries = this.props.dataRun.timeSeries;\n    const stroke = 'rgb(36, 116, 241, 0.7)';\n    const strokeWidth = 0.5;\n    const h = 60;\n\n    const _this$getScale = this.getScale(900, h),\n          x = _this$getScale.x,\n          y = _this$getScale.y;\n\n    const line = d3.line().x(d => x(d[0])).y(d => y(d[1]));\n    const svg = d3.select('.single-ctx-chart').append('svg').attr('width', '100%').attr('height', h);\n    svg.append('path').attr('stroke', stroke).attr('stroke-width', strokeWidth).attr('class', 'line-data').attr('d', line(timeSeries));\n  }\n\n  render() {\n    console.log(this.props.dataRun.timeSeries);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"single-ctx-chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Chart here\"));\n  }\n\n}\n\nexport default DrawChart;","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/components/Timeseries/Overview/DrawChart.jsx"],"names":["React","Component","d3","data","svgData","DrawChart","componentDidMount","svgRoot","createRef","getScale","w","h","x","scaleTime","range","domain","y","scaleLinear","drawChart","timeSeries","props","dataRun","stroke","strokeWidth","line","d","svg","select","append","attr","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;MAEQC,O,GAAYD,I,CAAZC,O;;AAER,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAC9BK,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,OAAL,GAAeP,KAAK,CAACQ,SAAN,EAAf,CADgB,CAEhB;AACH;;AAEDC,EAAAA,QAAQ,CAACC,CAAD,EAAIC,CAAJ,EAAO;AACb,UAAMC,CAAC,GAAGV,EAAE,CAACW,SAAH,GAAeC,KAAf,CAAqB,CAAC,CAAD,EAAIJ,CAAJ,CAArB,CAAV;AACAE,IAAAA,CAAC,CAACG,MAAF,CAAS,CAAC,aAAD,EAAgB,aAAhB,CAAT;AAEA,UAAMC,CAAC,GAAGd,EAAE,CAACe,WAAH,GAAiBH,KAAjB,CAAuB,CAACH,CAAD,EAAI,CAAJ,CAAvB,CAAV;AACAK,IAAAA,CAAC,CAACD,MAAF,CAAS,CAAC,CAAC,CAAF,EAAK,CAAL,CAAT;AACA,WAAO;AAAEH,MAAAA,CAAF;AAAKI,MAAAA;AAAL,KAAP;AACD;;AAEDE,EAAAA,SAAS,GAAG;AAAA,UACFC,UADE,GACa,KAAKC,KAAL,CAAWC,OADxB,CACFF,UADE;AAEV,UAAMG,MAAM,GAAG,wBAAf;AACA,UAAMC,WAAW,GAAG,GAApB;AAGA,UAAMZ,CAAC,GAAG,EAAV;;AANU,2BAOO,KAAKF,QAAL,CAAc,GAAd,EAAmBE,CAAnB,CAPP;AAAA,UAOFC,CAPE,kBAOFA,CAPE;AAAA,UAOCI,CAPD,kBAOCA,CAPD;;AAQV,UAAMQ,IAAI,GAAGtB,EAAE,CAACsB,IAAH,GACVZ,CADU,CACRa,CAAC,IAAIb,CAAC,CAACa,CAAC,CAAC,CAAD,CAAF,CADE,EAEVT,CAFU,CAERS,CAAC,IAAIT,CAAC,CAACS,CAAC,CAAC,CAAD,CAAF,CAFE,CAAb;AAKA,UAAMC,GAAG,GAAGxB,EAAE,CAACyB,MAAH,CAAU,mBAAV,EACTC,MADS,CACF,KADE,EAETC,IAFS,CAEJ,OAFI,EAEK,MAFL,EAGTA,IAHS,CAGJ,QAHI,EAGMlB,CAHN,CAAZ;AAKAe,IAAAA,GAAG,CAACE,MAAJ,CAAW,MAAX,EACGC,IADH,CACQ,QADR,EACkBP,MADlB,EAEGO,IAFH,CAEQ,cAFR,EAEwBN,WAFxB,EAGGM,IAHH,CAGQ,OAHR,EAGiB,WAHjB,EAIGA,IAJH,CAIQ,GAJR,EAIaL,IAAI,CAACL,UAAD,CAJjB;AAKD;;AAEDW,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,OAAX,CAAmBF,UAA/B;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAKD;;AA/C6B;;AAkDlC,eAAed,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as data from './tmpData';\n\nconst { svgData } = data;\n\nclass DrawChart extends Component {\n    componentDidMount() {\n        this.svgRoot = React.createRef();\n        // this.drawChart();\n    }\n\n    getScale(w, h) {\n      const x = d3.scaleTime().range([0, w]);\n      x.domain([1222819200000, 1468864800000]);\n\n      const y = d3.scaleLinear().range([h, 0]);\n      y.domain([-1, 1]);\n      return { x, y };\n    }\n\n    drawChart() {\n      const { timeSeries } = this.props.dataRun;\n      const stroke = 'rgb(36, 116, 241, 0.7)';\n      const strokeWidth = 0.5;\n\n\n      const h = 60;\n      const { x, y } = this.getScale(900, h);\n      const line = d3.line()\n        .x(d => x(d[0]))\n        .y(d => y(d[1]));\n\n\n      const svg = d3.select('.single-ctx-chart')\n        .append('svg')\n        .attr('width', '100%')\n        .attr('height', h);\n\n      svg.append('path')\n        .attr('stroke', stroke)\n        .attr('stroke-width', strokeWidth)\n        .attr('class', 'line-data')\n        .attr('d', line(timeSeries));\n    }\n\n    render() {\n      console.log(this.props.dataRun.timeSeries);\n      return (\n        <div>\n          <div className=\"single-ctx-chart\">Chart here</div>\n        </div>\n      );\n    }\n}\n\nexport default DrawChart;\n"]},"metadata":{},"sourceType":"module"}