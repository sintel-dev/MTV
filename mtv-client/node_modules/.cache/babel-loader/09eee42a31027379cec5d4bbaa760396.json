{"ast":null,"code":"var _jsxFileName = \"/home/sergiu/Projects/mtv-react/src/components/Landing/Projects.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from '../Common/Loader';\n\nconst renderProject = (project, index) => React.createElement(\"div\", {\n  className: \"cell\",\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, project.name), React.createElement(\"div\", {\n  className: \"item-data\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, project.signalNum, \" Signals\"), React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, project.pipelines.length, \" unique pipelines\")), React.createElement(\"ul\", {\n  className: \"last\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, project.experimentNum, \" experiments\"))));\n\nconst Projects = ({\n  projects\n}) => {\n  const isProjectsLoading = projects.isProjectsLoading,\n        projectsList = projects.projectsList;\n  return React.createElement(\"div\", {\n    className: \"item-row scroll-style\",\n    id: \"projects\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Datasets\"), React.createElement(\"div\", {\n    className: \"item-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    isLoading: isProjectsLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, projectsList.projects && projectsList.projects.length ? projectsList.projects.map(renderProject) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"No datasets have been found\"))));\n};\n\nProjects.propTypes = {\n  projects: PropTypes.object\n};\nexport default Projects;","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/components/Landing/Projects.jsx"],"names":["React","PropTypes","Loader","renderProject","project","index","name","signalNum","pipelines","length","experimentNum","Projects","projects","isProjectsLoading","projectsList","map","propTypes","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,KAAV,KACpB;AAAK,EAAA,SAAS,EAAC,MAAf;AAAsB,EAAA,GAAG,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKD,OAAO,CAACE,IAAb,CADF,EAEE;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKF,OAAO,CAACG,SAAb,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKH,OAAO,CAACI,SAAR,CAAkBC,MAAvB,sBAFF,CADF,EAKE;AAAI,EAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKL,OAAO,CAACM,aAAb,iBADF,CALF,CAFF,CADF;;AAcA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,QACzBC,iBADyB,GACWD,QADX,CACzBC,iBADyB;AAAA,QACNC,YADM,GACWF,QADX,CACNE,YADM;AAE/B,SACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAuC,IAAA,EAAE,EAAC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAED,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEMC,YAAY,CAACF,QAAb,IAAyBE,YAAY,CAACF,QAAb,CAAsBH,MAA/C,GACEK,YAAY,CAACF,QAAb,CAAsBG,GAAtB,CAA0BZ,aAA1B,CADF,GAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAJR,CADF,CAFF,CADF;AAcH,CAhBD;;AAkBAQ,QAAQ,CAACK,SAAT,GAAqB;AACnBJ,EAAAA,QAAQ,EAAEX,SAAS,CAACgB;AADD,CAArB;AAIA,eAAeN,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from '../Common/Loader';\n\nconst renderProject = (project, index) => (\n  <div className=\"cell\" key={index}>\n    <h3>{project.name}</h3>\n    <div className=\"item-data\">\n      <ul>\n        <li>{project.signalNum} Signals</li>\n        <li>{project.pipelines.length} unique pipelines</li>\n      </ul>\n      <ul className=\"last\">\n        <li>{project.experimentNum} experiments</li>\n      </ul>\n    </div>\n  </div>);\n\nconst Projects = ({ projects }) => {\n  const { isProjectsLoading, projectsList } = projects;\n    return (\n      <div className=\"item-row scroll-style\" id=\"projects\">\n        <h2>Datasets</h2>\n        <div className=\"item-wrapper\">\n          <Loader isLoading={isProjectsLoading}>\n            {\n                projectsList.projects && projectsList.projects.length ?\n                  projectsList.projects.map(renderProject) :\n                  <p>No datasets have been found</p>\n              }\n          </Loader>\n        </div>\n      </div>\n    );\n};\n\nProjects.propTypes = {\n  projects: PropTypes.object,\n};\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}