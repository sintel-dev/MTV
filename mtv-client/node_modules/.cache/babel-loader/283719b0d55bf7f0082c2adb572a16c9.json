{"ast":null,"code":"var _jsxFileName = \"/home/sergiu/Projects/mtv-react/src/components/Landing/Landing.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchProjects } from '../../model/actions/landing';\nimport Projects from './Projects';\nimport Pipelines from './Pipelines';\nimport Experiments from './Experiments';\nimport './Landing.scss';\n\nclass Landing extends Component {\n  componentDidMount() {\n    this.props.fetchProjectsList();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Projects, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(Pipelines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(Experiments, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  }\n\n}\n\nLanding.propTypes = {\n  fetchProjectsList: PropTypes.func\n};\nexport default connect(state => ({}), dispatch => ({\n  // @TODO state should be removed, how?\n  fetchProjectsList: () => dispatch(fetchProjects())\n}))(Landing);","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/components/Landing/Landing.jsx"],"names":["React","Component","connect","PropTypes","fetchProjects","Projects","Pipelines","Experiments","Landing","componentDidMount","props","fetchProjectsList","render","propTypes","func","state","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,gBAAP;;AAEA,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AAC9BQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,iBAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AAb6B;;AAgBhCJ,OAAO,CAACK,SAAR,GAAoB;AAChBF,EAAAA,iBAAiB,EAAER,SAAS,CAACW;AADb,CAApB;AAIA,eAAeZ,OAAO,CAACa,KAAK,KAAK,EAAL,CAAN,EAAgBC,QAAQ,KAAK;AAAE;AACnDL,EAAAA,iBAAiB,EAAE,MAAMK,QAAQ,CAACZ,aAAa,EAAd;AADgB,CAAL,CAAxB,CAAP,CAEXI,OAFW,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchProjects } from '../../model/actions/landing';\n\nimport Projects from './Projects';\nimport Pipelines from './Pipelines';\nimport Experiments from './Experiments';\n\nimport './Landing.scss';\n\nclass Landing extends Component {\n  componentDidMount() {\n    this.props.fetchProjectsList();\n  }\n\n  render() {\n    return (\n      <div>\n        <Projects />\n        <Pipelines />\n        <Experiments />\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n    fetchProjectsList: PropTypes.func,\n};\n\nexport default connect(state => ({}), dispatch => ({ // @TODO state should be removed, how?\n  fetchProjectsList: () => dispatch(fetchProjects()),\n}))(Landing);\n"]},"metadata":{},"sourceType":"module"}