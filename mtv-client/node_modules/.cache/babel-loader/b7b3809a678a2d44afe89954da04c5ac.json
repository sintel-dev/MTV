{"ast":null,"code":"var _jsxFileName = \"/home/sergiu/Projects/mtv-react/src/components/Timeseries/Overview/Experiment.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './Overview.scss';\nimport { getSelectedExperimentData, getProcessedDataRuns } from '../../../model/selectors/experiment';\nimport Loader from '../../Common/Loader';\nimport Datarun from './Datarun';\n\nfunction Experiment({\n  experimentData,\n  processedDataruns\n}) {\n  return React.createElement(\"div\", {\n    className: \"overview-wrapper scroll-style\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    isLoading: experimentData.isExperimentDataLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, !experimentData.isExperimentDataLoading && experimentData.data.dataruns.length ? processedDataruns.map(datarun => React.createElement(Datarun, {\n    datarun: datarun,\n    key: datarun.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"No datarun for current experiment\")));\n}\n\nExperiment.propTypes = {\n  experimentData: PropTypes.object,\n  processedDataruns: PropTypes.array\n};\nexport default connect(state => ({\n  experimentData: getSelectedExperimentData(state),\n  processedDataruns: getProcessedDataRuns(state)\n}), null)(Experiment);","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/components/Timeseries/Overview/Experiment.jsx"],"names":["React","connect","PropTypes","getSelectedExperimentData","getProcessedDataRuns","Loader","Datarun","Experiment","experimentData","processedDataruns","isExperimentDataLoading","data","dataruns","length","map","datarun","id","propTypes","object","array","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,iBAAP;AAEA,SACEC,yBADF,EAEEC,oBAFF,QAGO,qCAHP;AAIA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAApB,EAA2D;AACvD,SACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAED,cAAc,CAACE,uBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,CAACF,cAAc,CAACE,uBAAhB,IAA2CF,cAAc,CAACG,IAAf,CAAoBC,QAApB,CAA6BC,MAAxE,GACEJ,iBAAiB,CAACK,GAAlB,CAAsBC,OAAO,IAC3B,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,OAAlB;AAA2B,IAAA,GAAG,EAAEA,OAAO,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,GAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCALN,CADF,CADF;AAYH;;AAEDT,UAAU,CAACU,SAAX,GAAuB;AACnBT,EAAAA,cAAc,EAAEN,SAAS,CAACgB,MADP;AAEnBT,EAAAA,iBAAiB,EAAEP,SAAS,CAACiB;AAFV,CAAvB;AAKA,eAAelB,OAAO,CAACmB,KAAK,KAAK;AAC7BZ,EAAAA,cAAc,EAAEL,yBAAyB,CAACiB,KAAD,CADZ;AAE7BX,EAAAA,iBAAiB,EAAEL,oBAAoB,CAACgB,KAAD;AAFV,CAAL,CAAN,EAGlB,IAHkB,CAAP,CAGLb,UAHK,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './Overview.scss';\n\nimport {\n  getSelectedExperimentData,\n  getProcessedDataRuns,\n} from '../../../model/selectors/experiment';\nimport Loader from '../../Common/Loader';\nimport Datarun from './Datarun';\n\nfunction Experiment({ experimentData, processedDataruns }) {\n    return (\n      <div className=\"overview-wrapper scroll-style\">\n        <Loader isLoading={experimentData.isExperimentDataLoading}>\n          {\n            !experimentData.isExperimentDataLoading && experimentData.data.dataruns.length ?\n              processedDataruns.map(datarun =>\n                <Datarun datarun={datarun} key={datarun.id} />) :\n              <p>No datarun for current experiment</p>\n          }\n        </Loader>\n      </div>\n    );\n}\n\nExperiment.propTypes = {\n    experimentData: PropTypes.object,\n    processedDataruns: PropTypes.array,\n};\n\nexport default connect(state => ({\n    experimentData: getSelectedExperimentData(state),\n    processedDataruns: getProcessedDataRuns(state),\n}), null)(Experiment);\n"]},"metadata":{},"sourceType":"module"}