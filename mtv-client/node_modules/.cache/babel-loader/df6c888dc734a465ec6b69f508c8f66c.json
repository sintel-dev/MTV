{"ast":null,"code":"var _jsxFileName = \"/home/sergiu/Projects/mtv-react/src/components/Landing/Experiments.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from '../Common/Loader';\n\nconst renderExperiment = (experiment, index) => React.createElement(\"div\", {\n  className: \"cell\",\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, \"#\", index + 1, \" \", experiment.dataset, \"_\", experiment.pipeline), React.createElement(\"div\", {\n  className: \"item-data\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, \"Signals: \", experiment.dataruns.length), React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, \"DC: \", experiment.date_creation.substring(0, 10)))));\n\nconst Experiments = props => {\n  const experimentsList = props.experiments.experimentsList;\n  console.log(experiments);\n  debugger;\n  return React.createElement(\"div\", {\n    className: \"item-row scroll-style\",\n    id: \"experiments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Experiments\"), React.createElement(\"div\", {\n    className: \"item-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    isLoading: isExperimentsLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, experimentsList.length ? experimentsList.map(renderExperiment) : React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"No experiments found\"))));\n};\n\nExperiments.propTypes = {\n  experiments: PropTypes.array\n};\nexport default Experiments;","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/components/Landing/Experiments.jsx"],"names":["React","PropTypes","Loader","renderExperiment","experiment","index","dataset","pipeline","dataruns","length","date_creation","substring","Experiments","props","experimentsList","experiments","console","log","isExperimentsLoading","map","propTypes","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,UAAD,EAAaC,KAAb,KAEvB;AAAK,EAAA,SAAS,EAAC,MAAf;AAAsB,EAAA,GAAG,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAMA,KAAK,GAAG,CAAd,OAAkBD,UAAU,CAACE,OAA7B,OAAuCF,UAAU,CAACG,QAAlD,CADF,EAEE;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAcH,UAAU,CAACI,QAAX,CAAoBC,MAAlC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASL,UAAU,CAACM,aAAX,CAAyBC,SAAzB,CAAmC,CAAnC,EAAsC,EAAtC,CAAT,CAFF,CADF,CAFF,CAFF;;AAaA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA,QACrBC,eADqB,GACDD,KAAK,CAACE,WADL,CACrBD,eADqB;AAE7BE,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA;AACA,SACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAuC,IAAA,EAAE,EAAC,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEG,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIJ,eAAe,CAACL,MAAhB,GAAyBK,eAAe,CAACK,GAAhB,CAAoBhB,gBAApB,CAAzB,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ,CADF,CAFF,CADF;AAaD,CAjBD;;AAmBAS,WAAW,CAACQ,SAAZ,GAAwB;AACtBL,EAAAA,WAAW,EAAEd,SAAS,CAACoB;AADD,CAAxB;AAIA,eAAeT,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from '../Common/Loader';\n\nconst renderExperiment = (experiment, index) => (\n\n  <div className=\"cell\" key={index}>\n    <h3>#{index + 1} {experiment.dataset}_{experiment.pipeline}</h3>\n    <div className=\"item-data\">\n      <ul>\n        <li>Signals: {experiment.dataruns.length}</li>\n        <li>DC: {experiment.date_creation.substring(0, 10)}</li>\n      </ul>\n    </div>\n  </div>\n);\n\nconst Experiments = (props) => {\n  const { experimentsList } = props.experiments;\n  console.log(experiments);\n  debugger;\n  return (\n    <div className=\"item-row scroll-style\" id=\"experiments\">\n      <h2>Experiments</h2>\n      <div className=\"item-wrapper\">\n        <Loader isLoading={isExperimentsLoading}>\n          {\n            experimentsList.length ? experimentsList.map(renderExperiment) :\n            <h2>No experiments found</h2>\n          }\n        </Loader>\n      </div>\n    </div>\n  );\n};\n\nExperiments.propTypes = {\n  experiments: PropTypes.array,\n};\n\nexport default Experiments;\n"]},"metadata":{},"sourceType":"module"}