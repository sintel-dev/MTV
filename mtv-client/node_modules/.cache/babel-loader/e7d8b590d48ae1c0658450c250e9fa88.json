{"ast":null,"code":"import { api } from './utils'; // http://127.0.0.1:3000/api/v1/experiments/\n// http://127.0.0.1:3000/api/v1/pipelines/\n// http://127.0.0.1:3000/api/v1/datasets/\n\nexport function fetchExperiments() {\n  return function (dispatch) {\n    const promise = api.get('experiments');\n    dispatch({\n      type: 'GET_EXPERIMENTS',\n      promise\n    });\n    return promise;\n  };\n}\nexport function fetchPipelines() {\n  return function (dispatch) {\n    const promise = api.get('pipelines');\n    dispatch({\n      type: 'GET_PIPELINES',\n      promise\n    });\n    return promise;\n  };\n}\nexport function fetchDatasets() {\n  return function (dispatch) {\n    const promise = api.get('datasets');\n    dispatch({\n      type: 'GET_DATASETS',\n      promise\n    });\n    return promise;\n  };\n}\nexport function fetchProjects() {\n  return function (dispatch) {\n    // @TODO - use Promise.All, investigate the order of fetching data\n    const promise = Promise.all([dispatch(fetchExperiments()), dispatch(fetchPipelines()), dispatch(fetchDatasets())]);\n    dispatch({\n      type: 'FETCH_PROJECTS',\n      promise\n    }); // return dispatch(fetchExperiments())\n    //     .then(() => dispatch(fetchPipelines())\n    //         .then(() => dispatch(fetchDatasets())),\n    //     );\n  };\n}\nexport function selectProject(activeProject) {\n  return function (dispatch) {\n    dispatch({\n      type: 'SELECT_PROJECT',\n      activeProject\n    });\n  };\n}\nexport function selectPipeline(pipelineName) {\n  return function (dispatch) {\n    dispatch({\n      type: 'SELECT_PIPELINE',\n      pipelineName\n    });\n  };\n}\nexport function selectExperiment(experimentName) {\n  return function (dispatch) {\n    dispatch({\n      type: 'SELECT_EXPERIMENT',\n      experimentName\n    });\n  };\n}","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/model/actions/landing.js"],"names":["api","fetchExperiments","dispatch","promise","get","type","fetchPipelines","fetchDatasets","fetchProjects","Promise","all","selectProject","activeProject","selectPipeline","pipelineName","selectExperiment","experimentName"],"mappings":"AAAA,SAASA,GAAT,QAAoB,SAApB,C,CAGA;AACA;AACA;;AAEA,OAAO,SAASC,gBAAT,GAA4B;AAC/B,SAAO,UAASC,QAAT,EAAmB;AACtB,UAAMC,OAAO,GAAGH,GAAG,CAACI,GAAJ,CAAQ,aAAR,CAAhB;AACAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,iBAAR;AAA2BF,MAAAA;AAA3B,KAAD,CAAR;AACA,WAAOA,OAAP;AACH,GAJD;AAKH;AAED,OAAO,SAASG,cAAT,GAA0B;AAC7B,SAAO,UAAUJ,QAAV,EAAoB;AACvB,UAAMC,OAAO,GAAGH,GAAG,CAACI,GAAJ,CAAQ,WAAR,CAAhB;AACAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,eAAR;AAAyBF,MAAAA;AAAzB,KAAD,CAAR;AACA,WAAOA,OAAP;AACH,GAJD;AAKH;AAED,OAAO,SAASI,aAAT,GAAyB;AAC5B,SAAO,UAASL,QAAT,EAAmB;AACtB,UAAMC,OAAO,GAAGH,GAAG,CAACI,GAAJ,CAAQ,UAAR,CAAhB;AACAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,cAAR;AAAwBF,MAAAA;AAAxB,KAAD,CAAR;AACA,WAAOA,OAAP;AACH,GAJD;AAKH;AAED,OAAO,SAASK,aAAT,GAAyB;AAC5B,SAAO,UAASN,QAAT,EAAmB;AAAE;AACxB,UAAMC,OAAO,GAAGM,OAAO,CAACC,GAAR,CAAY,CAACR,QAAQ,CAACD,gBAAgB,EAAjB,CAAT,EAA+BC,QAAQ,CAACI,cAAc,EAAf,CAAvC,EAA2DJ,QAAQ,CAACK,aAAa,EAAd,CAAnE,CAAZ,CAAhB;AACAL,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE,gBADD;AAELF,MAAAA;AAFK,KAAD,CAAR,CAFsB,CAMtB;AACA;AACA;AACA;AACH,GAVD;AAWH;AAED,OAAO,SAASQ,aAAT,CAAuBC,aAAvB,EAAsC;AACzC,SAAO,UAASV,QAAT,EAAmB;AACtBA,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,gBAAR;AAA0BO,MAAAA;AAA1B,KAAD,CAAR;AACH,GAFD;AAGH;AAED,OAAO,SAASC,cAAT,CAAwBC,YAAxB,EAAsC;AACzC,SAAO,UAASZ,QAAT,EAAmB;AACtBA,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,iBAAR;AAA2BS,MAAAA;AAA3B,KAAD,CAAR;AACH,GAFD;AAGH;AAED,OAAO,SAASC,gBAAT,CAA2BC,cAA3B,EAA2C;AAC9C,SAAO,UAASd,QAAT,EAAmB;AACtBA,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,mBAAR;AAA6BW,MAAAA;AAA7B,KAAD,CAAR;AACH,GAFD;AAGH","sourcesContent":["import { api } from './utils';\n\n\n// http://127.0.0.1:3000/api/v1/experiments/\n// http://127.0.0.1:3000/api/v1/pipelines/\n// http://127.0.0.1:3000/api/v1/datasets/\n\nexport function fetchExperiments() {\n    return function(dispatch) {\n        const promise = api.get('experiments');\n        dispatch({ type: 'GET_EXPERIMENTS', promise });\n        return promise;\n    };\n}\n\nexport function fetchPipelines() {\n    return function (dispatch) {\n        const promise = api.get('pipelines');\n        dispatch({ type: 'GET_PIPELINES', promise });\n        return promise;\n    };\n}\n\nexport function fetchDatasets() {\n    return function(dispatch) {\n        const promise = api.get('datasets');\n        dispatch({ type: 'GET_DATASETS', promise });\n        return promise;\n    };\n}\n\nexport function fetchProjects() {\n    return function(dispatch) { // @TODO - use Promise.All, investigate the order of fetching data\n        const promise = Promise.all([dispatch(fetchExperiments()), dispatch(fetchPipelines()), dispatch(fetchDatasets())]);\n        dispatch({\n            type: 'FETCH_PROJECTS',\n            promise,\n        });\n        // return dispatch(fetchExperiments())\n        //     .then(() => dispatch(fetchPipelines())\n        //         .then(() => dispatch(fetchDatasets())),\n        //     );\n    };\n}\n\nexport function selectProject(activeProject) {\n    return function(dispatch) {\n        dispatch({ type: 'SELECT_PROJECT', activeProject });\n    };\n}\n\nexport function selectPipeline(pipelineName) {\n    return function(dispatch) {\n        dispatch({ type: 'SELECT_PIPELINE', pipelineName });\n    };\n}\n\nexport function selectExperiment (experimentName) {\n    return function(dispatch) {\n        dispatch({ type: 'SELECT_EXPERIMENT', experimentName });\n    };\n}\n"]},"metadata":{},"sourceType":"module"}