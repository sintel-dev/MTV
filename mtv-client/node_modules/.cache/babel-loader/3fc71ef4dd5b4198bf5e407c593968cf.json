{"ast":null,"code":"var _jsxFileName = \"/home/sergiu/Projects/mtv-react/src/components/Timeseries/Overview/DrawChart.jsx\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { drawChart } from './chartUtils';\n\nconst DrawChart = ({\n  dataRun,\n  onPeriodTimeChange\n}) => {\n  useEffect(() => drawChart(width, height, dataRun, onPeriodTimeChange), [dataRun, onPeriodTimeChange, width]);\n  const width = document.querySelector('.overview-wrapper').offsetWidth - 60; // const width = 1000;\n\n  const height = 36;\n  return React.createElement(\"div\", {\n    className: \"_\".concat(dataRun.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }) // @TODO - find a better way to target this element\n  ;\n};\n\nDrawChart.propTypes = {\n  dataRun: PropTypes.object,\n  onPeriodTimeChange: PropTypes.func\n};\nexport default DrawChart;","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/components/Timeseries/Overview/DrawChart.jsx"],"names":["React","useEffect","PropTypes","drawChart","DrawChart","dataRun","onPeriodTimeChange","width","height","document","querySelector","offsetWidth","id","propTypes","object","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,SAAT,QAA0B,cAA1B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAqC;AACrDL,EAAAA,SAAS,CAAC,MAAME,SAAS,CAACI,KAAD,EAAQC,MAAR,EAAgBH,OAAhB,EAAyBC,kBAAzB,CAAhB,EAA8D,CAACD,OAAD,EAAUC,kBAAV,EAA8BC,KAA9B,CAA9D,CAAT;AACA,QAAMA,KAAK,GAAGE,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,EAA4CC,WAA5C,GAA0D,EAAxE,CAFqD,CAGrD;;AACA,QAAMH,MAAM,GAAG,EAAf;AACE,SACE;AAAK,IAAA,SAAS,aAAMH,OAAO,CAACO,EAAd,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CACuC;AADvC;AAGH,CARD;;AAUAR,SAAS,CAACS,SAAV,GAAsB;AACpBR,EAAAA,OAAO,EAAEH,SAAS,CAACY,MADC;AAEpBR,EAAAA,kBAAkB,EAAEJ,SAAS,CAACa;AAFV,CAAtB;AAKA,eAAeX,SAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { drawChart } from './chartUtils';\n\nconst DrawChart = ({ dataRun, onPeriodTimeChange }) => {\n  useEffect(() => drawChart(width, height, dataRun, onPeriodTimeChange), [dataRun, onPeriodTimeChange, width]);\n  const width = document.querySelector('.overview-wrapper').offsetWidth - 60;\n  // const width = 1000;\n  const height = 36;\n    return (\n      <div className={`_${dataRun.id}`} /> // @TODO - find a better way to target this element\n    );\n};\n\nDrawChart.propTypes = {\n  dataRun: PropTypes.object,\n  onPeriodTimeChange: PropTypes.func,\n};\n\nexport default DrawChart;\n"]},"metadata":{},"sourceType":"module"}