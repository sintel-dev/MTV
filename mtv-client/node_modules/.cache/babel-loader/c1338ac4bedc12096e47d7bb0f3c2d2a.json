{"ast":null,"code":"var _jsxFileName = \"/home/sergiu/Projects/mtv-react/src/components/Timeseries/Overview/Datarun.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { selectDatarun, onPeriodChange } from '../../../model/actions/datarun';\nimport { getSelectedDatarunID, getSelectedTimePeriod } from '../../../model/selectors/datarun';\nimport DrawChart from './DrawChart';\n\nconst Datarun = ({\n  datarun,\n  onSelectDatarun,\n  selectedDatarunID,\n  onChangePeriod,\n  selectedTimePeriod\n}) => {\n  const activeClass = datarun.id === selectedDatarunID ? 'active' : '';\n  return React.createElement(\"div\", {\n    className: \"time-row \".concat(activeClass),\n    onClick: () => onSelectDatarun(datarun.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, datarun.signal), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(DrawChart, {\n    dataRun: datarun,\n    onPeriodTimeChange: onChangePeriod,\n    selectedPeriod: selectedTimePeriod,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }))));\n};\n\nDatarun.propTypes = {\n  datarun: PropTypes.object,\n  onSelectDatarun: PropTypes.func,\n  selectedDatarunID: PropTypes.string,\n  onChangePeriod: PropTypes.func\n};\nexport default connect(state => ({\n  selectedDatarunID: getSelectedDatarunID(state),\n  selectedTimePeriod: getSelectedTimePeriod(state)\n}), dispatch => ({\n  onSelectDatarun: datarunID => dispatch(selectDatarun(datarunID)),\n  onChangePeriod: period => dispatch(onPeriodChange(period))\n}))(Datarun);","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/components/Timeseries/Overview/Datarun.jsx"],"names":["React","PropTypes","connect","selectDatarun","onPeriodChange","getSelectedDatarunID","getSelectedTimePeriod","DrawChart","Datarun","datarun","onSelectDatarun","selectedDatarunID","onChangePeriod","selectedTimePeriod","activeClass","id","signal","propTypes","object","func","string","state","dispatch","datarunID","period"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,gCAA9C;AACA,SAASC,oBAAT,EAA+BC,qBAA/B,QAA4D,kCAA5D;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,eAAX;AAA4BC,EAAAA,iBAA5B;AAA+CC,EAAAA,cAA/C;AAA+DC,EAAAA;AAA/D,CAAD,KAAyF;AACrG,QAAMC,WAAW,GAAGL,OAAO,CAACM,EAAR,KAAeJ,iBAAf,GAAmC,QAAnC,GAA8C,EAAlE;AAEA,SACE;AAAK,IAAA,SAAS,qBAAcG,WAAd,CAAd;AAA2C,IAAA,OAAO,EAAE,MAAMJ,eAAe,CAACD,OAAO,CAACM,EAAT,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,OAAO,CAACO,MAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEP,OAApB;AAA6B,IAAA,kBAAkB,EAAEG,cAAjD;AAAiE,IAAA,cAAc,EAAEC,kBAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,CAFF,CADF,CADF;AAQH,CAXD;;AAaAL,OAAO,CAACS,SAAR,GAAoB;AAChBR,EAAAA,OAAO,EAAER,SAAS,CAACiB,MADH;AAEhBR,EAAAA,eAAe,EAAET,SAAS,CAACkB,IAFX;AAGhBR,EAAAA,iBAAiB,EAAEV,SAAS,CAACmB,MAHb;AAIhBR,EAAAA,cAAc,EAAEX,SAAS,CAACkB;AAJV,CAApB;AAOA,eAAejB,OAAO,CAACmB,KAAK,KAAK;AAC7BV,EAAAA,iBAAiB,EAAEN,oBAAoB,CAACgB,KAAD,CADV;AAE7BR,EAAAA,kBAAkB,EAAEP,qBAAqB,CAACe,KAAD;AAFZ,CAAL,CAAN,EAGlBC,QAAQ,KAAK;AACbZ,EAAAA,eAAe,EAAGa,SAAD,IAAeD,QAAQ,CAACnB,aAAa,CAACoB,SAAD,CAAd,CAD3B;AAEbX,EAAAA,cAAc,EAAGY,MAAD,IAAYF,QAAQ,CAAClB,cAAc,CAACoB,MAAD,CAAf;AAFvB,CAAL,CAHU,CAAP,CAMXhB,OANW,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { selectDatarun, onPeriodChange } from '../../../model/actions/datarun';\nimport { getSelectedDatarunID, getSelectedTimePeriod } from '../../../model/selectors/datarun';\nimport DrawChart from './DrawChart';\n\nconst Datarun = ({ datarun, onSelectDatarun, selectedDatarunID, onChangePeriod, selectedTimePeriod }) => {\n    const activeClass = datarun.id === selectedDatarunID ? 'active' : '';\n\n    return (\n      <div className={`time-row ${activeClass}`} onClick={() => onSelectDatarun(datarun.id)}>\n        <ul>\n          <li>{datarun.signal}</li>\n          <li><DrawChart dataRun={datarun} onPeriodTimeChange={onChangePeriod} selectedPeriod={selectedTimePeriod} /></li>\n        </ul>\n      </div>\n  );\n};\n\nDatarun.propTypes = {\n    datarun: PropTypes.object,\n    onSelectDatarun: PropTypes.func,\n    selectedDatarunID: PropTypes.string,\n    onChangePeriod: PropTypes.func,\n};\n\nexport default connect(state => ({\n    selectedDatarunID: getSelectedDatarunID(state),\n    selectedTimePeriod: getSelectedTimePeriod(state),\n}), dispatch => ({\n    onSelectDatarun: (datarunID) => dispatch(selectDatarun(datarunID)),\n    onChangePeriod: (period) => dispatch(onPeriodChange(period)),\n}))(Datarun);\n"]},"metadata":{},"sourceType":"module"}