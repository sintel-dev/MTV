{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { getIsExperimentsLoading, getExperimentsData, getSelectedExperiment } from './projects'; // export const getSelectedExperimentData = createSelector(\n//     [getIsExperimentsLoading, getExperimentsData, getSelectedExperiment],\n//     (isExperimentsLoading, experiments, selectedExperimentID) => {\n//         // if (isExperimentsLoading) { return null; }\n//         const { experimentsList } = experiments;\n//         const tmp = experimentsList.filter(experiment => experiment.id === selectedExperimentID);\n//         debugger;\n//         console.log(tmp);\n//     },\n// );\n// export const getExperimentDatarun = (state) => state.experimentData;\n\nexport const getExperimentDataRun = state => state.experimentData.dataruns;","map":{"version":3,"sources":["/home/sergiu/Projects/mtv-react/src/model/selectors/experiment.js"],"names":["createSelector","getIsExperimentsLoading","getExperimentsData","getSelectedExperiment","getExperimentDataRun","state","experimentData","dataruns"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,uBAAT,EAAkCC,kBAAlC,EAAsDC,qBAAtD,QAAmF,YAAnF,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,OAAO,MAAMC,oBAAoB,GAAIC,KAAD,IAAWA,KAAK,CAACC,cAAN,CAAqBC,QAA7D","sourcesContent":["import { createSelector } from 'reselect';\nimport { getIsExperimentsLoading, getExperimentsData, getSelectedExperiment } from './projects';\n\n// export const getSelectedExperimentData = createSelector(\n//     [getIsExperimentsLoading, getExperimentsData, getSelectedExperiment],\n//     (isExperimentsLoading, experiments, selectedExperimentID) => {\n//         // if (isExperimentsLoading) { return null; }\n//         const { experimentsList } = experiments;\n//         const tmp = experimentsList.filter(experiment => experiment.id === selectedExperimentID);\n//         debugger;\n//         console.log(tmp);\n//     },\n// );\n\n// export const getExperimentDatarun = (state) => state.experimentData;\n\n\nexport const getExperimentDataRun = (state) => state.experimentData.dataruns;\n"]},"metadata":{},"sourceType":"module"}